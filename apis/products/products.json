{
  "openapi": "3.0.2",
  "info": {
    "version": "1.0.0",
    "title": "ispirt.in/",
    "contact": {
      "email": "community@ispirt.in",
      "url": "https://ispirt.in/"
    }
  },
  "paths": {
    "/networks": {
      "post": {
        "operationId": "createNetwork",
        "tags": [
          "NetworkAPIs"
        ],
        "description": "This API is network create API.",
        "requestBody": {
          "description": "This will be called from console to create network",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "description"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "format": "Alphanumeric",
                    "maxLength": 35,
                    "description": "Name of network"
                  },
                  "description": {
                    "type": "string",
                    "format": "Alphanumeric",
                    "maxLength": 35,
                    "description": "Description of prodnetworkuct."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of network creation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Network"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "get": {
        "operationId": "listNetwork",
        "tags": [
          "NetworkAPIs"
        ],
        "description": "This API is network create API.",
        "responses": {
          "200": {
            "description": "Acknowledgement of network list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Network"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/networks/{id}/add": {
      "post": {
        "operationId": "addToNetwork",
        "tags": [
          "NetworkAPIs"
        ],
        "description": "This API is add partner to network.",
        "requestBody": {
          "description": "This will be called from add partner to network",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "description"
                ],
                "properties": {
                  "partner": {
                    "type": "string",
                    "format": "Alphanumeric",
                    "maxLength": 35,
                    "description": "Id of network"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of network creation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Network"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/networks/{id}/delete": {
      "post": {
        "operationId": "deleteToNetwork",
        "tags": [
          "NetworkAPIs"
        ],
        "description": "This API is delete/remove partner to network.",
        "requestBody": {
          "description": "This will be called from delete/remove partner to network",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "description"
                ],
                "properties": {
                  "partner": {
                    "type": "string",
                    "format": "Alphanumeric",
                    "maxLength": 35,
                    "description": "Id of network"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of network creation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Network"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products": {
      "post": {
        "operationId": "createProduct",
        "tags": [
          "Product Registry"
        ],
        "summary": "Product create API.",
        "requestBody": {
          "description": "This will be called from console to create product",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "description"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "format": "Alphanumeric",
                    "maxLength": 35,
                    "description": "Name of product"
                  },
                  "description": {
                    "type": "string",
                    "format": "Alphanumeric",
                    "maxLength": 35,
                    "description": "Description of product."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of product creation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "get": {
        "operationId": "listProduct",
        "tags": [
          "Product Registry"
        ],
        "summary": "List product API",
        "responses": {
          "200": {
            "description": "Acknowledgement of product creation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "data"
                  ],
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "operationId": "indexProduct",
        "tags": [
          "Product Registry"
        ],
        "summary": "Product find by ID API.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "operationId": "deleteProduct",
        "tags": [
          "Product Registry"
        ],
        "summary": "Delete product by ID API.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/{id}/disable": {
      "post": {
        "operationId": "disableProduct",
        "tags": [
          "Product Registry"
        ],
        "summary": "Disable product API.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Acknowledgement of product delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/{id}/metadata": {
      "get": {
        "operationId": "getProductMetadata",
        "tags": [
          "Product Registry"
        ],
        "summary": "Get Product Metadata.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/{id}/allowed_participants": {
      "get": {
        "operationId": "getAllowedParticipants",
        "tags": [
          "Product Registry"
        ],
        "summary": "Product find by ID API.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a product participants",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProductParticipants"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "post": {
        "operationId": "updateAllowedParticipants",
        "tags": [
          "ProductParticipantAPIs"
        ],
        "summary": "Product find by ID API.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a product participants",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProductParticipants"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/{id}/participants": {
      "get": {
        "operationId": "getParticipantsList",
        "tags": [
          "Product Registry"
        ],
        "summary": "Get Product Participants List.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a product participants",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProductParticipants"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "post": {
        "operationId": "participateInProduct",
        "tags": [
          "ProductParticipantAPIs"
        ],
        "summary": "Add Product Participants List.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a product participants",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProductParticipants"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "operationId": "unparticipateInProduct",
        "summary": "Unparticipate in product",
        "tags": [
          "ProductParticipantAPIs"
        ],
        "responses": {
          "200": {
            "description": "Returns a product participants",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProductParticipants"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/{id}/participants/{type}/fields": {
      "get": {
        "operationId": "getFieldsByParticipantType",
        "tags": [
          "Product Registry"
        ],
        "summary": "Get Fields By Participant Type.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Type of participant",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductField"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/{id}/participants/{participant_product_id}/disable": {
      "post": {
        "operationId": "disableProductParticipant",
        "tags": [
          "Product Registry"
        ],
        "summary": "Disable Product Participant API.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "participant_product_id",
            "in": "path",
            "description": "Participant Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Acknowledgement of product delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/{id}/participants/invite": {
      "post": {
        "operationId": "inviteParticipants",
        "tags": [
          "Product Registry"
        ],
        "summary": "Invite participants to product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "participants"
                ],
                "properties": {
                  "participants": {
                    "type": "array",
                    "description": "List of participants to invite",
                    "items": {
                      "$ref": "#/components/schemas/ProductParticipants"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns an invite for the product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Response"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/{id}/approve": {
      "post": {
        "operationId": "participantManagementApIs",
        "tags": [
          "Product Registry"
        ],
        "summary": "Approve a product.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns approved or rejected",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Response"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/{id}/admin/{user_id}/make": {
      "post": {
        "operationId": "makeUserAdmin",
        "summary": "Make a user as an Admin",
        "tags": [
          "Product Registry"
        ],
        "description": "This API is to make a user as an Admin for a product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns success or failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Response"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/{id}/admin/{user_id}": {
      "delete": {
        "operationId": "removeUserAsAdmin",
        "summary": "Remove user as Admin",
        "tags": [
          "Product Registry"
        ],
        "description": "This API is to remove Admin privileages for a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns success or failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Response"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/{user_id}/participants/endpoint": {
      "get": {
        "operationId": "getParticipantEndpoint",
        "tags": [
          "Product Registry"
        ],
        "summary": "Get Product Participant",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "Participant ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns participant information",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProductParticipants"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/{id}/update": {
      "patch": {
        "operationId": "updateProduct",
        "tags": [
          "Product Registry"
        ],
        "summary": "Update Product",
        "requestBody": {
          "description": "This will be called from console to update product",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "description",
                  "id"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "format": "Alphanumeric",
                    "maxLength": 35,
                    "description": "Name of product"
                  },
                  "description": {
                    "type": "string",
                    "format": "Alphanumeric",
                    "maxLength": 35,
                    "description": "Description of product."
                  },
                  "id": {
                    "type": "string",
                    "format": "Integer",
                    "maxLength": 25,
                    "description": "Id of the existing product."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns updated product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/{id}/notify": {
      "post": {
        "operationId": "notifyParticipants",
        "tags": [
          "Product Registry"
        ],
        "summary": "Notify Product Participants.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "participants"
                ],
                "properties": {
                  "participants": {
                    "type": "array",
                    "description": "List of participants to notify",
                    "items": {
                      "$ref": "#/components/schemas/ProductParticipants"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns success or failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Response"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/products/{id}/notice_notify": {
      "post": {
        "operationId": "notifyParticipants",
        "tags": [
          "Product Registry"
        ],
        "summary": "Notify Product Participants.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "participants"
                ],
                "properties": {
                  "participants": {
                    "type": "array",
                    "description": "List of participants to notify",
                    "items": {
                      "$ref": "#/components/schemas/ProductParticipants"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns success or failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Response"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "oAuth2Client": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://ocen.com/auth/oauth2/token/",
            "scopes": {}
          }
        }
      }
    },
    "schemas": {
      "ProductPartner": {
        "type": "object",
        "required": [
          "id",
          "type",
          "name",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "Network": {
        "type": "object",
        "required": [
          "id",
          "name",
          "description"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "partners": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductPartner"
            }
          }
        }
      },
      "ProductField": {
        "type": "object",
        "required": [
          "name",
          "description"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "ProductPartnerWithData": {
        "type": "object",
        "required": [
          "id",
          "type",
          "name",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "Product": {
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "status",
          "version"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "creater": {
            "type": "string"
          },
          "is_enable": {
            "type": "boolean"
          },
          "is_private": {
            "type": "boolean"
          },
          "approved_at": {
            "type": "integer",
            "format": "int64"
          },
          "is_aa_required": {
            "type": "boolean"
          },
          "dedupe": {
            "type": "object",
            "properties": {
              "source": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "network": {
            "$ref": "#/components/schemas/Network"
          },
          "lender": {
            "type": "object",
            "properties": {
              "allowed": {
                "type": "boolean"
              },
              "partners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductPartner"
                }
              }
            }
          },
          "loan_service": {
            "type": "object",
            "properties": {
              "allowed": {
                "type": "boolean"
              },
              "partners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductPartner"
                }
              }
            }
          },
          "benchmark_data": {
            "type": "object",
            "properties": {
              "allowed": {
                "type": "boolean"
              },
              "partners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductPartner"
                }
              },
              "fields": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductField"
                }
              }
            }
          },
          "disbursement": {
            "type": "object",
            "properties": {
              "allowed": {
                "type": "boolean"
              },
              "partners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductPartnerWithData"
                }
              },
              "fields": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductField"
                }
              }
            }
          },
          "collection": {
            "type": "object",
            "properties": {
              "allowed": {
                "type": "boolean"
              },
              "partners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductPartner"
                }
              }
            }
          },
          "collateral": {
            "type": "object",
            "properties": {
              "allowed": {
                "type": "boolean"
              },
              "partners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductPartner"
                }
              }
            }
          },
          "monitoring": {
            "type": "object",
            "properties": {
              "allowed": {
                "type": "boolean"
              },
              "partners": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProductPartner"
                }
              }
            }
          }
        }
      },
      "ProductParticipants": {
        "type": "object",
        "required": [
          "name",
          "description",
          "endpoint"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "endpoint": {
            "type": "string",
            "examples": [
              "https://abc-bank.com"
            ]
          }
        }
      },
      "Response": {
        "type": "object",
        "description": "Status of response. Whether success or has encountered error",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    },
    {
      "oAuth2Client": []
    }
  ]
}