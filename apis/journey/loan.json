{
  "openapi": "3.0.2",
  "info": {
    "version": "1.0.0",
    "title": "OCEN",
    "contact": {
      "email": "community@ispirt.in",
      "url": "https://ispirt.in/"
    }
  },
  "paths": {
    "/v4.0.0alpha/creditGuarantee/checkCredit": {
      "post": {
        "tags": [
          "Credit Guarantee"
        ],
        "summary": "Check Credit Guarantee",
        "description": "This API will be called by the Loan agent to check if the customer is eligible for Credit Guarantee. The result of the API call is added to the Loan Application.",
        "operationId": "CheckCreditGuarantee",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerData": {
                    "type": "object",
                    "properties": {
                      "pan": {
                        "type": "string"
                      },
                      "udyamRegistrationNumber": {
                        "type": "string"
                      },
                      "gstin": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Eligibility check successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isCgtmseEligible": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/loanApplications/createLoanRequest": {
      "post": {
        "tags": [
          "Create Loan Applications"
        ],
        "summary": "Create Loan Applications Request",
        "description": "Create Loan applications endpoint available on Lender to be used by LA.",
        "operationId": "CreateLoanApplicationsRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplications": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LoanApplication"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/loanApplications/createLoanResponse": {
      "post": {
        "tags": [
          "Create Loan Applications"
        ],
        "summary": "Create Loan Applications Response",
        "description": "This is the response from each Lender for the Create Loan Applications request. No offers are rolled out as part of this API. If the lender system finds preliminary information sufficient for doing the loan processing, it will send “PROCESSING” as the status. Otherwise, it can reject the application citing a reason for the same.",
        "operationId": "createLoanApplicationsResponse",
        "requestBody": {
          "description": "Response by lender to BA for create bulk loan application request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "response",
                  "productData",
                  "loanApplications"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplications": {
                    "type": "array",
                    "description": "Array of LoanApplications",
                    "items": {
                      "$ref": "#/components/schemas/LoanApplication"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "ack"
                  ],
                  "properties": {
                    "ack": {
                      "$ref": "#/components/schemas/Ack"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v4.0.0alpha/loanApplications/getAdditionalPledgedDocumentsRequest": {
      "post": {
        "tags": [
          "Offers"
        ],
        "summary": "Get Additional Pledged Documents Request",
        "description": "This API will be invoked by the Lender to pull any additional documents available. The hasAdditionalDocuments flag in the pledgedDocuments object of the loan application will be set to true if there are any additional documents available.",
        "operationId": "GetAdditionalPledgedDocumentsRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "loanApplicationId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string",
                    "description": "UUID for the loan application.",
                    "examples": [
                      "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb1e1b4"
                    ]
                  },
                  "requestedDocumentPagination": {
                    "type": "object",
                    "properties": {
                      "pageNumber": {
                        "type": "integer",
                        "description": "Page number to be fetched.",
                        "examples": [
                          1
                        ]
                      },
                      "pageSize": {
                        "type": "integer",
                        "description": "Number of documents to be fetched per page.",
                        "examples": [
                          10
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/loanApplications/getAdditionalPledgedDocumentsResponse": {
      "post": {
        "tags": [
          "Offers"
        ],
        "summary": "Get Additional Pledged Documents Response",
        "description": "This API will be invoked by the Loan Agent to push additional documents available againgst the loan application in a paginated manner as requested by the Lender.",
        "operationId": "GetAdditionalPledgedDocumentsResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "loanApplicationId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string",
                    "description": "UUID for the loan application.",
                    "examples": [
                      "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb1e1b4"
                    ]
                  },
                  "requestedDocumentPagination": {
                    "type": "object",
                    "properties": {
                      "pageNumber": {
                        "type": "integer",
                        "description": "Page number to be fetched.",
                        "examples": [
                          1
                        ]
                      },
                      "pageSize": {
                        "type": "integer",
                        "description": "Number of documents to be fetched per page.",
                        "examples": [
                          10
                        ]
                      },
                      "totalDocumentCount": {
                        "type": "integer",
                        "description": "Total number of documents available.",
                        "examples": [
                          100
                        ]
                      }
                    }
                  },
                  "pledgedDocuments": {
                    "type": "object",
                    "required": [
                      "totalDocumentCount",
                      "hasAdditionalDocuments",
                      "documents"
                    ],
                    "totalDocumentCount": {
                      "type": "integer"
                    },
                    "hasAdditionalDocuments": {
                      "type": "boolean"
                    },
                    "documents": {
                      "type": "array",
                      "items": {
                        "$ref": "./Document.yaml"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/consent/consentHandleRequest": {
      "post": {
        "tags": [
          "Consent"
        ],
        "summary": "Consent Handle Request",
        "description": "Create consent handle with Account Aggregator | This API is used to request the lenders to send a consent request for fetching the bank account statements, GST, historical data. <br /> The lender (FIU) checks with the AA and creates a consent handle internally once this API is triggered",
        "requestBody": {
          "description": "Request by LA to lender to get consent handle with Account Aggregator",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "loanApplicationIds",
                  "productData",
                  "consent"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "f8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                      ]
                    }
                  },
                  "consent": {
                    "$ref": "#/components/schemas/Consent"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement by Lender to BA for Consent Handle Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/consent/consentHandleResponse": {
      "post": {
        "tags": [
          "Consent"
        ],
        "summary": "Consent Handle Response",
        "description": "Invoked by lender to send consent handle created with a Account Aggregator",
        "requestBody": {
          "description": "Consent Handle Response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "response",
                  "productData",
                  "consent"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "f8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                      ]
                    }
                  },
                  "consent": {
                    "$ref": "#/components/schemas/Consent"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to consent Handle Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/consent/journeyNotify": {
      "post": {
        "tags": [
          "Consent"
        ],
        "summary": "Share the consent journey status",
        "description": "Invoked by BA to inform Lenders of the consent journey state once the customer has interacted with Account Aggregator",
        "requestBody": {
          "description": "Consent State update request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "loanApplicationIds",
                  "productData",
                  "consent"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "f8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                      ]
                    }
                  },
                  "consent": {
                    "$ref": "#/components/schemas/Consent"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to consent handle Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/consent/statusRequest": {
      "post": {
        "tags": [
          "Consent"
        ],
        "summary": "Consent Status Request",
        "description": "Invoked by LA to get consent handle status from Lender",
        "requestBody": {
          "description": "Consent Status Request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "consentHandle"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "consentHandle": {
                    "type": "string",
                    "description": "Consent handle created during loan applications request processing"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to consent status request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/consent/statusResponse": {
      "post": {
        "tags": [
          "Consent"
        ],
        "summary": "Consent Status Response",
        "description": "Invoked by Lender to send consent status to LA",
        "requestBody": {
          "description": "Consent Status Response",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "response",
                  "productData",
                  "consent"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "f8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                      ]
                    }
                  },
                  "consent": {
                    "$ref": "#/components/schemas/Consent"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement to consent status response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/offers/generateOffersRequest": {
      "post": {
        "tags": [
          "Offers"
        ],
        "summary": "Generate Offers Request",
        "description": "The LA sends this request to the lender to get the list of offers that the lender is willing to provide for the loan applications already shared.",
        "operationId": "GenerateOffersRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "loanApplicationIds"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "examples": [
                        "t8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/offers/generateOffersResponse": {
      "post": {
        "tags": [
          "Offers"
        ],
        "summary": "Generate Offers Response",
        "description": "This API is invoked by the lender informing the borrower regarding the various loan offers that have been generated corresponding to each of the loan applications. This is a bulk API, where multiple loan offers can be sent to the borrower in one shot.",
        "operationId": "GenerateOffersResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "response",
                  "productData",
                  "loanApplications"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplications": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LoanApplicationWithOffer"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/offers/sendAdditionalDocumentsRequest": {
      "post": {
        "tags": [
          "Offers"
        ],
        "summary": "Send Additional Documents Request",
        "description": "This API is invoked by the LA informing the lender regarding the additional documents that are required to be submitted by the borrower for a particular loan application with the Action Required status in the Generate Offers Response API.",
        "operationId": "SendAdditionalDocumentsRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "loanApplicationIds"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplications": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "loanApplicationId",
                        "documents"
                      ],
                      "properties": {
                        "loanApplicationId": {
                          "type": "string",
                          "description": "UUID for the loan application.",
                          "examples": [
                            "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                          ]
                        },
                        "additionalDocuments": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Document",
                            "description": "Documents that are required to be submitted by the borrower"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/offers/sendAdditionalDocumentsResponse": {
      "post": {
        "tags": [
          "Offers"
        ],
        "summary": "Send Additional Documents Response",
        "description": "This API is invoked by returning an offer if the documents suffice the requirement or the lender can return another action required for any additional information required.",
        "operationId": "SendAdditionalDocumentsResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "response",
                  "productData",
                  "loanApplications"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplications": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/LoanApplicationWithOffer"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/offers/setOffersRequest": {
      "post": {
        "tags": [
          "Offers"
        ],
        "summary": "Set Offers Request",
        "description": "This API is invoked by the LA to inform the lender about the offer that the borrower has chosen for a particular loan application.",
        "operationId": "SetOffersRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "loanApplicationId",
                  "offer"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  },
                  "offer": {
                    "$ref": "#/components/schemas/Offer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/offers/setOffersResponse": {
      "post": {
        "tags": [
          "Offers"
        ],
        "summary": "Set Offers Response",
        "description": "This API is invoked by the lender and is the asynchronous response to Set Offer Request API.",
        "operationId": "SetOffersResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "response",
                  "productData",
                  "loanApplicationId",
                  "loanApplicationStatus"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  },
                  "loanApplicationStatus": {
                    "$ref": "#/components/schemas/LoanApplicationStatus"
                  },
                  "extensibleData": {
                    "$ref": "#/components/schemas/ExtensibleData"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/kyc/getKYCMethodsRequest": {
      "post": {
        "tags": [
          "KYC"
        ],
        "summary": "Get KYC Methods Request",
        "description": "This API is called by LA to fetch the preferred KYC method by the Lender.",
        "operationId": "GetKYCMethodsRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "loanApplicationId",
                  "kyc"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string",
                    "examples": [
                      "t8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/kyc/getKYCMethodsResponse": {
      "post": {
        "tags": [
          "KYC"
        ],
        "summary": "Get KYC Methods Response",
        "description": "This  API is called by Lender to the LA in response to teh GetKYCMethodsRequest. The Lender returns the preffered KYC Method for the LoanApplication.",
        "operationId": "GetKYCMethodsResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "loanApplicationId",
                  "kyc"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string",
                    "examples": [
                      "t8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                    ]
                  },
                  "kyc": {
                    "type": "object",
                    "properties": {
                      "business": {
                        "type": "object",
                        "properties": {
                          "isRequired": {
                            "type": "boolean"
                          },
                          "method": {
                            "type": "string",
                            "enum": [
                              "CKYC",
                              "UDYAM",
                              "OFFLINE_AADHAAR"
                            ]
                          }
                        }
                      },
                      "individual": {
                        "type": "object",
                        "properties": {
                          "isRequired": {
                            "type": "boolean"
                          },
                          "method": {
                            "type": "string",
                            "enum": [
                              "CKYC",
                              "UDYAM",
                              "OFFLINE_AADHAAR",
                              "AADHAR_EKYC"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/kyc/triggerKycRequest": {
      "post": {
        "tags": [
          "KYC"
        ],
        "summary": "Trigger KYC Request",
        "description": "This  API is called by LA to initiate the KYC process of the borrower after successfully accepting the final offer. The lender is supposed to return the url, where the borrower will be completing the KYC process.",
        "operationId": "TriggerKYCRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "loanApplicationId",
                  "kyc"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string",
                    "examples": [
                      "t8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                    ]
                  },
                  "kyc": {
                    "$ref": "#/components/schemas/KYCDetailsRequest"
                  },
                  "baRedirectURL": {
                    "type": "string",
                    "description": "URL to which the borrower will be redirected after completing the KYC process from the Lenders KYC Page.",
                    "examples": [
                      "https://basite.com/kyccomplete?loanApplicationId=t8cc6822bd4bbb4eb1b9e1b4996fbff8acb&status=success"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/kyc/triggerKycResponse": {
      "post": {
        "tags": [
          "KYC"
        ],
        "summary": "Trigger KYC Response",
        "description": "This API is called by the lender in response to trigger KYC requests. The lender returns the url for KYC details submission. The KYC process will be carried out on the lender server.",
        "operationId": "TriggerKYCResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "response",
                  "productData",
                  "loanApplicationId",
                  "loanApplicationStatus",
                  "kyc"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string",
                    "examples": [
                      "t8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                    ]
                  },
                  "loanApplicationStatus": {
                    "$ref": "#/components/schemas/LoanApplicationStatus"
                  },
                  "kyc": {
                    "$ref": "#/components/schemas/KYCDetails"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/kyc/kycStatusRequest": {
      "post": {
        "tags": [
          "KYC"
        ],
        "summary": "KYC Status Request",
        "description": "This API is called by LA to get the KYC status. This API will be triggered just after the user completes the KYC process.",
        "operationId": "KYCStatusRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "loanApplicationId",
                  "kyc"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  },
                  "kyc": {
                    "type": "object",
                    "properties": {
                      "kycRefNo": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/kyc/kycStatusResponse": {
      "post": {
        "tags": [
          "KYC"
        ],
        "summary": "KYC Status Response",
        "description": "This API is called by the lender to inform the status of the KYC process. Lender is also supposed to inform the BA about the action required for completing the KYC.",
        "operationId": "KYCStatusResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "loanApplicationId",
                  "kyc",
                  "loanApplicationStatus"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  },
                  "loanApplicationStatus": {
                    "$ref": "#/components/schemas/LoanApplicationStatus"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "kyc": {
                    "$ref": "#/components/schemas/KYCDetails"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/loanAcceptance/loanAgreementRequest": {
      "post": {
        "tags": [
          "Loan Acceptance"
        ],
        "summary": "Loan agreement Request",
        "description": "Request for the Loan agreement sent by the LA to the lender and initiates the process for the borrower to receive the Loan agreement and accept the terms via OTP.",
        "operationId": "loanAgreementRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "loanApplicationId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  },
                  "baRedirectURL": {
                    "type": "string",
                    "description": "URL to which the borrower will be redirected after completing the Loan Agreement Signing process from the Lenders e-sign Page.",
                    "examples": [
                      "https://basite.com/agreement-complete?loanApplicationId=t8cc6822bd4bbb4eb1b9e1b4996fbff8acb&status=success"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/loanAcceptance/LoanAgreementResponse": {
      "post": {
        "tags": [
          "Loan Acceptance"
        ],
        "summary": "Loan agreement Response",
        "description": "Response from the Lender to the LA sharing the loan agreement request for the borrower.",
        "operationId": "loanAgreementResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "loanApplicationId",
                  "response",
                  "loanAgreement",
                  "loanApplicationStatus"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  },
                  "loanApplicationStatus": {
                    "$ref": "#/components/schemas/LoanApplicationStatus"
                  },
                  "loanAgreement": {
                    "type": "object",
                    "properties": {
                      "legalDocument": {
                        "$ref": "#/components/schemas/LoanAgreement"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "AGREEMENT_READY",
                          "ACTION_REQUIRED"
                        ]
                      },
                      "actionRequired": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ActionRequired"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/loanAcceptance/triggerLoanAcceptanceRequest": {
      "post": {
        "tags": [
          "Loan Acceptance"
        ],
        "summary": "Trigger Loan Acceptance Request",
        "description": "This API is invoked by the LA when the user agrees to the terms of the agreement.The Asynchronous response for this API should include the lender sending an OTP to the borrower’s phone number. SMS Format for the OTP [#] {6Digit OTP} is the One Time Password (OTP) to complete the loan process with {Lender Name}. {appToken} >- Eg- 467866 is the One Time Password (OTP) to complete the loan process with ABC Bank. \\#0aBCD7DMr7s >-",
        "operationId": "triggerLoanAcceptanceRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "loanApplicationId",
                  "credBlock"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  },
                  "credBlock": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "OTP"
                        ]
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "appToken": {
                            "type": "string",
                            "examples": [
                              "<token for auto-reading otp>"
                            ]
                          }
                        }
                      },
                      "extensibleData": {
                        "$ref": "#/components/schemas/ExtensibleData"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/loanAcceptance/triggerLoanAcceptanceResponse": {
      "post": {
        "tags": [
          "Loan Acceptance"
        ],
        "summary": "Trigger Loan Acceptance Response",
        "description": "This API is invoked by the Lender when the Lender triggers the credential verification process from the borrower. SMS Format for the OTP [#] {6Digit OTP} is the One Time Password (OTP) to complete the loan process with {Lender Name}. {appToken} >- Eg- 467866 is the One Time Password (OTP) to complete the loan process with ABC Bank. \\#0aBCD7DMr7s >-",
        "operationId": "triggerLoanAcceptanceResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "response",
                  "credBlock",
                  "loanApplicationStatus",
                  "loanApplicationId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  },
                  "loanApplicationStatus": {
                    "$ref": "#/components/schemas/LoanApplicationStatus"
                  },
                  "credBlock": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "otpSessionKey": {
                            "type": "string"
                          },
                          "maskedPhoneNumber": {
                            "type": "string",
                            "examples": [
                              "XXXXXXX775"
                            ]
                          }
                        }
                      },
                      "extensibleData": {
                        "$ref": "#/components/schemas/ExtensibleData"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/loanAcceptance/verifyLoanAcceptanceRequest": {
      "post": {
        "tags": [
          "Loan Acceptance"
        ],
        "summary": "Verify Loan Acceptance Request",
        "description": "This API is invoked by the LA when the user enters the OTP received on the mobile number and agrees to the terms of the agreement. The asynchronous response for this API should include the lender acknowledging the receipt of OTP and verifying if the user has entered the correct OTP that was shared by the lender.",
        "operationId": "verifyLoanAcceptanceRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "credBlock",
                  "loanApplicationId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  },
                  "credBlock": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "otpSessionKey": {
                            "type": "string"
                          },
                          "otp": {
                            "type": "number",
                            "examples": [
                              "856429"
                            ]
                          }
                        }
                      },
                      "extensibleData": {
                        "$ref": "#/components/schemas/ExtensibleData"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/loanAcceptance/verifyLoanAcceptanceResponse": {
      "post": {
        "tags": [
          "Loan Acceptance"
        ],
        "summary": "Verify Loan Acceptance Response",
        "description": "This API is invoked by the Lender  when the OTP entered by the user is shared through the BA. This API acknowledges the receipt of OTP and verifies if the user has entered the correct OTP that was shared by the lender on the mobile number associated with the disbursement account.",
        "operationId": "verifyLoanAcceptanceResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "response",
                  "loanApplicationId",
                  "loanApplicationStatus"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  },
                  "loanApplicationStatus": {
                    "$ref": "#/components/schemas/LoanApplicationStatus"
                  },
                  "credBlock": {
                    "type": "object",
                    "properties": {
                      "data": {
                        "type": "object",
                        "properties": {
                          "otpSessionKey": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "SUCCESS",
                              "INVALID_SESSION",
                              "INCORRECT_OTP"
                            ]
                          }
                        }
                      },
                      "extensibleData": {
                        "$ref": "#/components/schemas/ExtensibleData"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/grantLoan/grantLoanRequest": {
      "post": {
        "tags": [
          "Grant Loan"
        ],
        "summary": "Grant Loan Request",
        "description": "This API is invoked by the LA once the borrower completes successful signing of the loan agreement to create the actual loan in the lender’s system.",
        "operationId": "grantLoanRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "loanApplicationId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string",
                    "examples": [
                      "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/grantLoan/grantLoanResponse": {
      "post": {
        "tags": [
          "Grant Loan"
        ],
        "summary": "Grant Loan Response",
        "description": "This method is called be the Lender when the Grant Loan processing is completed. This informs the borrower about the status of the loan in the lender system. Upon successful creation of a loan in the system, the lender returns all the details of the loan.",
        "operationId": "grantLoanResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "response",
                  "loanDetails"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "loanDetails": {
                    "type": "object",
                    "properties": {
                      "loanId": {
                        "type": "string"
                      },
                      "loanApplicationId": {
                        "type": "string"
                      },
                      "loanApplicationStatus": {
                        "$ref": "#/components/schemas/LoanApplicationStatus"
                      },
                      "createdDate": {
                        "type": "string"
                      },
                      "startDate": {
                        "type": "string"
                      },
                      "endDate": {
                        "type": "string"
                      },
                      "borrower": {
                        "$ref": "#/components/schemas/Borrower"
                      },
                      "documents": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Document"
                        }
                      },
                      "guarantors": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Guarantor"
                        }
                      },
                      "applications": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Applicant"
                        }
                      },
                      "offer": {
                        "$ref": "#/components/schemas/Offer"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/disbursement/setRepaymentPlanRequest": {
      "post": {
        "tags": [
          "Set Repayment"
        ],
        "summary": "Set Repayment Plan Request",
        "description": "This API is invoked by the LA to inform the lender system about the details of the repayment plan that will be used by the borrower.",
        "operationId": "setRepaymentPlanRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "loanApplicationId",
                  "productData",
                  "plan",
                  "hasCollectionSupport"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  },
                  "loanId": {
                    "type": "string"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "plan": {
                    "$ref": "#/components/schemas/PaymentPlan"
                  },
                  "hasCollectionSupport": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/disbursement/setRepaymentPlanResponse": {
      "post": {
        "tags": [
          "Set Repayment"
        ],
        "summary": "Set Repayment Plan Response",
        "description": "This API is invoked by the lender to the LA giving the payment url where he can enter details of repayment.",
        "operationId": "setRepaymentPlanResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "response",
                  "loanApplicationId",
                  "loanApplicationStatus",
                  "plan",
                  "paymentMethod",
                  "useCollectionSupport"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  },
                  "loanId": {
                    "type": "string"
                  },
                  "loanApplicationStatus": {
                    "$ref": "#/components/schemas/LoanApplicationStatus"
                  },
                  "plan": {
                    "$ref": "#/components/schemas/PaymentPlan"
                  },
                  "paymentMethod": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  },
                  "useCollectionSupport": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/disbursement/setRepaymentPlanStatusRequest": {
      "post": {
        "tags": [
          "Set Repayment"
        ],
        "summary": "Set Repayment Plan Status Request",
        "description": "This API is used by LA to check the status of a previously initiated set repayment plan request. This API is called once the payment page of the lender is loaded and the borrower choses a repayment method associated with the chosen repayment plan.",
        "operationId": "setRepaymentPlanStatusRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "response",
                  "loanApplicationId",
                  "plan",
                  "paymentMethod"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "plan": {
                    "$ref": "#/components/schemas/PaymentPlan"
                  },
                  "paymentMethod": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  },
                  "loanId": {
                    "type": "string"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/disbursement/setRepaymentPlanStatusResponse": {
      "post": {
        "tags": [
          "Set Repayment"
        ],
        "summary": "Set Repayment Plan Status Response / Webhook",
        "description": "This API is used by lenders to inform LA about the status of a previously initiated set Repayment.The API returns the status of the repayment plan that the borrower has chosen. In case, the borrower has chosen e-mandate as the repayment method in payment page url, the status of the repayment plan becomes ACTIVE only after successful authorization of the e-mandate on the PSP by the borrower.",
        "operationId": "setRepaymentPlanStatusResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "response",
                  "loanApplicationId",
                  "plan",
                  "paymentMethod",
                  "useCollectionSupport",
                  "loanApplicationStatus"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  },
                  "loanApplicationStatus": {
                    "$ref": "#/components/schemas/LoanApplicationStatus"
                  },
                  "loanId": {
                    "type": "string"
                  },
                  "plan": {
                    "$ref": "#/components/schemas/PaymentPlan"
                  },
                  "paymentMethod": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  },
                  "useCollectionSupport": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/disbursement/setDisbursementAccountRequest": {
      "post": {
        "tags": [
          "Disbursement"
        ],
        "summary": "Set Disbursement Account Request",
        "description": "This API is invoked by the LA to inform the lender about the disbursement account that the borrower has chosen.",
        "operationId": "setDisbursementAccountRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "account",
                  "loanApplicationId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanId": {
                    "type": "string"
                  },
                  "account": {
                    "$ref": "#/components/schemas/AccountDetails"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/disbursement/setDisbursementAccountResponse": {
      "post": {
        "tags": [
          "Disbursement"
        ],
        "summary": "Set Disbursement Account Response",
        "description": "This API is invoked by the lender to inform the LA regarding whether the lender has successfully set the disbursement account which was sent in SetDisbursementAccountRequest.",
        "operationId": "setDisbursementAccountResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "account",
                  "response",
                  "isWorkingCapitalUndertakingDone",
                  "hasOtherWorkingCapitalAccount",
                  "isWorkingCapitalAccount",
                  "otherWorkingCapitalAccounts",
                  "loanApplicationId",
                  "loanApplicationStatus"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  },
                  "loanApplicationStatus": {
                    "$ref": "#/components/schemas/LoanApplicationStatus"
                  },
                  "loanId": {
                    "type": "string"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "account": {
                    "$ref": "#/components/schemas/AccountDetails"
                  },
                  "isWorkingCapitalUndertakingDone": {
                    "type": "boolean"
                  },
                  "hasOtherWorkingCapitalAccount": {
                    "type": "boolean"
                  },
                  "isWorkingCapitalAccount": {
                    "type": "boolean"
                  },
                  "otherWorkingCapitalAccounts": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/AccountDetailsData"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/disbursement/triggerDisbursementRequest": {
      "post": {
        "tags": [
          "Disbursement"
        ],
        "summary": "Trigger Disbursement Request",
        "description": "This API triggers the request when the borrower wants the money to be disbursed immediately.",
        "operationId": "triggerDisbursementRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "loanId",
                  "productData",
                  "payment"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanId": {
                    "type": "string",
                    "examples": [
                      "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                    ]
                  },
                  "payment": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/disbursement/triggerDisbursementResponse": {
      "post": {
        "tags": [
          "Disbursement"
        ],
        "summary": "Trigger Disbursement Response",
        "description": "This API is response from the Lender to a request by the borrower to disburse the money immediately.",
        "operationId": "triggerDisbursementResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "response",
                  "loanApplicationId",
                  "loanApplicationStatus",
                  "loanId",
                  "payment"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  },
                  "loanApplicationStatus": {
                    "$ref": "#/components/schemas/LoanApplicationStatus"
                  },
                  "loanId": {
                    "type": "string",
                    "examples": [
                      "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                    ]
                  },
                  "payment": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/disbursement/triggerDisbursementStatusRequest": {
      "post": {
        "tags": [
          "Disbursement"
        ],
        "summary": "Trigger Disbursement Status Request",
        "description": "This API is to be used by LA to check the status of a previously initiated disbursement request.",
        "operationId": "triggerDisbursementStatusRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "loanId",
                  "productData",
                  "payment"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "loanId": {
                    "type": "string",
                    "examples": [
                      "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                    ]
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "payment": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/disbursement/triggerDisbursementStatusResponse": {
      "post": {
        "tags": [
          "Disbursement"
        ],
        "summary": "Trigger Disbursement Status Response",
        "description": "This API is the response given by lender for  a trigger Disbursement Status Request.",
        "operationId": "triggerDisbursementStatusResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "loanId",
                  "loanApplicationId",
                  "loanApplicationStatus",
                  "productData",
                  "payment",
                  "response"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  },
                  "loanApplicationStatus": {
                    "$ref": "#/components/schemas/LoanApplicationStatus"
                  },
                  "loanId": {
                    "type": "string",
                    "examples": [
                      "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                    ]
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "payment": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/repayment/triggerRepaymentRequest": {
      "post": {
        "tags": [
          "Trigger Repayment"
        ],
        "summary": "Trigger Repayment Request",
        "description": "This API is invoked by the LA to inform the lender to trigger a repayment. This API will not be called when payment is routed to lender via collection agent.",
        "operationId": "triggerRepaymentRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "payment",
                  "loanId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "payment": {
                    "$ref": "#/components/schemas/Payment"
                  },
                  "loanId": {
                    "type": "string"
                  },
                  "baRedirectURL": {
                    "type": "string",
                    "description": "URL to which the borrower will be redirected after completing the Payment process from the Lenders Payment Page.",
                    "examples": [
                      "https://basite.com/payment-complete?loanApplicationId=t8cc6822bd4bbb4eb1b9e1b4996fbff8acb&status=success"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/repayment/triggerRepaymentResponse": {
      "post": {
        "tags": [
          "Trigger Repayment"
        ],
        "summary": "Trigger Repayment Response",
        "description": "This API is invoked by the lender to the LA giving the lender payment page url from where the borrower can make the payment. Lender also generates an id for the payment which becomes the reference for BA to check the status of repayment.",
        "operationId": "triggerRepaymentResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "payment",
                  "response",
                  "loanId",
                  "loanStatus"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "payment": {
                    "$ref": "#/components/schemas/Payment"
                  },
                  "loanId": {
                    "type": "string"
                  },
                  "loanStatus": {
                    "$ref": "#/components/schemas/LoanStatus"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/repayment/triggerRepaymentStatusRequest": {
      "post": {
        "tags": [
          "Trigger Repayment"
        ],
        "summary": "Trigger Repayment Status Request",
        "description": "This API is used by LA to check the status of a previously initiated repayment transaction. In the case where collection is handled by Collection Management System (CMS), once the BA receives payment confirmation (including transaction reference number) from the Collection Management System, BA will send a request to the lender to check if a payment has been credited against the transaction Reference Number.",
        "operationId": "triggerRepaymentStatusRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "payment",
                  "loanId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "payment": {
                    "$ref": "#/components/schemas/Payment"
                  },
                  "loanId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/repayment/triggerRepaymentStatusResponse": {
      "post": {
        "tags": [
          "Trigger Repayment"
        ],
        "summary": "Trigger Repayment Status Response",
        "description": "This API is used by LA to check the status of a previously initiated repayment transaction. In the case where collection is handled by Collection Management System (CMS), once the BA receives payment confirmation (including transaction reference number) from the Collection Management System, BA will send a request to the lender to check if a payment has been credited against the transaction Reference Number.",
        "operationId": "triggerRepaymentStatusResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "payment",
                  "response",
                  "loanId",
                  "loanStatus"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "payment": {
                    "$ref": "#/components/schemas/Payment"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "loanId": {
                    "type": "string"
                  },
                  "loanStatus": {
                    "$ref": "#/components/schemas/LoanStatus"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/repayment/confirmRepaymentRequest": {
      "post": {
        "tags": [
          "Trigger Repayment"
        ],
        "summary": "Confirm Repayment Request",
        "description": "This API is used by lenders to inform LA about the status of a repayment handled directly by the lender (Triggered on Lender side - Payment on the branch or auto E-Mandate repayment).",
        "operationId": "confirmRepaymentRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "response",
                  "payment",
                  "loanId",
                  "paymentMethod"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "payment": {
                    "$ref": "#/components/schemas/Payment"
                  },
                  "paymentMethod": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "loanId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/loanDetails/getloanRequest": {
      "post": {
        "tags": [
          "Loan Details"
        ],
        "summary": "Get Loan Request",
        "description": "This API is invoked by the LA when the LA wants to get the details of the loan for the borrower.",
        "operationId": "getLoanRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "loanId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanId": {
                    "type": "string",
                    "examples": [
                      "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/loanDetails/getloanResponse": {
      "post": {
        "tags": [
          "Loan Details"
        ],
        "summary": "Get Loan Response",
        "description": "This method is called by the Lender and it returns all the details of the loan.",
        "operationId": "getLoanResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "response",
                  "productData",
                  "loanId",
                  "lenderAccount",
                  "loanStatus",
                  "createdDate",
                  "startDate",
                  "endDate",
                  "summary"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanId": {
                    "type": "string",
                    "examples": [
                      "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                    ]
                  },
                  "lenderAccount": {
                    "type": "object",
                    "required": [
                      "accountDataType",
                      "data"
                    ]
                  },
                  "loanStatus": {
                    "$ref": "#/components/schemas/LoanStatus"
                  },
                  "createdDate": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {
                    "type": "string"
                  },
                  "summary": {
                    "type": "object",
                    "required": [
                      "nextRepayment",
                      "currentRepayment",
                      "principalPaid",
                      "interestPaid",
                      "penaltyPaid",
                      "principalPending",
                      "interestPending",
                      "amountDisbursed",
                      "amountRepaid",
                      "tenure",
                      "description"
                    ],
                    "properties": {
                      "nextRepayment": {
                        "$ref": "#/components/schemas/Payment"
                      },
                      "currentRepayment": {
                        "$ref": "#/components/schemas/Payment"
                      },
                      "principalPaid": {
                        "type": "string"
                      },
                      "interestPaid": {
                        "type": "string"
                      },
                      "penaltyPaid": {
                        "type": "string"
                      },
                      "principalPending": {
                        "type": "string"
                      },
                      "interestPending": {
                        "type": "string"
                      },
                      "amountDisbursed": {
                        "type": "string"
                      },
                      "amountRepaid": {
                        "type": "string"
                      },
                      "tenure": {
                        "$ref": "#/components/schemas/LoanTenure"
                      },
                      "description": {
                        "type": "string",
                        "examples": [
                          "short description for the loan"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/loanDetails/listloansRequest": {
      "post": {
        "tags": [
          "Loan Details"
        ],
        "summary": "List Loans Request",
        "description": "This API is invoked by the LA when the LA wants to get the list of loans.",
        "operationId": "listLoansRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "borrower"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "borrower": {
                    "$ref": "#/components/schemas/Borrower"
                  },
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/loanDetails/listLoansResponse": {
      "post": {
        "tags": [
          "Loan Details"
        ],
        "summary": "List Loans Request",
        "description": "This API is invoked by the Lender to return the details of the loans.",
        "operationId": "listLoansResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "response",
                  "loans"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "response": {
                    "type": "object",
                    "required": [
                      "error"
                    ],
                    "properties": {
                      "error": {
                        "type": "string",
                        "default": "",
                        "examples": [
                          "0"
                        ]
                      }
                    }
                  },
                  "loans": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "loanId",
                        "terms"
                      ],
                      "properties": {
                        "loanId": {
                          "type": "string",
                          "examples": [
                            "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                          ]
                        },
                        "loanStatus": {
                          "$ref": "#/components/schemas/LoanStatus"
                        },
                        "terms": {
                          "$ref": "#/components/schemas/LoanTerms"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/loanDetails/loanStatementRequest": {
      "post": {
        "tags": [
          "Loan Details"
        ],
        "summary": "Loan Statement Request",
        "description": "This method is called by the LA to get the account statement for the loan for a specified period. If the start and end dates are blank, it will return the entire Loan Statement.",
        "operationId": "loanStatementRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "loanId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanId": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/loanDetails/loanStatementResponse": {
      "post": {
        "tags": [
          "Loan Details"
        ],
        "summary": "Loan Statement Response",
        "description": "This method is called by the LA to get the account statement for the loan for a specified period. If the start and end dates are blank, it will return the entire Loan Statement.",
        "operationId": "LoanStatementResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "response",
                  "productData",
                  "loanId",
                  "loanStatus",
                  "accountStatement"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanId": {
                    "type": "string"
                  },
                  "loanStatus": {
                    "$ref": "#/components/schemas/LoanStatus"
                  },
                  "accountStatement": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Transaction"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/loanDetails/loanStatementSummaryRequest": {
      "post": {
        "tags": [
          "Loan Details"
        ],
        "summary": "Loan Summary Request",
        "description": "This API is invoked by the LA to get the summary of the loan as of the current date.",
        "operationId": "loanSummaryRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "loanId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanId": {
                    "type": "string",
                    "examples": [
                      "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/loanDetails/loanStatementSummaryResponse": {
      "post": {
        "tags": [
          "Loan Details"
        ],
        "summary": "Loan Summary Response",
        "description": "This API is invoked by the LA once the borrower completes successful signing of the loan agreement to create the actual loan in the lender’s system.",
        "operationId": "loanSummaryResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "response",
                  "productData",
                  "loanId",
                  "lenderAccount",
                  "loanStatus",
                  "createdDate",
                  "startDate",
                  "endDate",
                  "summary"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanId": {
                    "type": "string",
                    "examples": [
                      "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                    ]
                  },
                  "lenderAccount": {
                    "type": "object",
                    "required": [
                      "accountDataType",
                      "data"
                    ]
                  },
                  "loanStatus": {
                    "$ref": "#/components/schemas/LoanStatus"
                  },
                  "createdDate": {
                    "type": "string"
                  },
                  "startDate": {
                    "type": "string"
                  },
                  "endDate": {
                    "type": "string"
                  },
                  "summary": {
                    "type": "object",
                    "required": [
                      "nextRepayment",
                      "currentRepayment",
                      "principalPaid",
                      "interestPaid",
                      "penaltyPaid",
                      "principalPending",
                      "interestPending",
                      "amountDisbursed",
                      "amountRepaid",
                      "tenure",
                      "description"
                    ],
                    "properties": {
                      "nextRepayment": {
                        "$ref": "#/components/schemas/Payment"
                      },
                      "currentRepayment": {
                        "$ref": "#/components/schemas/Payment"
                      },
                      "principalPaid": {
                        "type": "string"
                      },
                      "interestPaid": {
                        "type": "string"
                      },
                      "penaltyPaid": {
                        "type": "string"
                      },
                      "principalPending": {
                        "type": "string"
                      },
                      "interestPending": {
                        "type": "string"
                      },
                      "amountDisbursed": {
                        "type": "string"
                      },
                      "amountRepaid": {
                        "type": "string"
                      },
                      "tenure": {
                        "$ref": "#/components/schemas/LoanTenure"
                      },
                      "description": {
                        "type": "string",
                        "examples": [
                          "short description for the loan"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/derivedDataPartner/getSchemaRequest": {
      "post": {
        "tags": [
          "Data Provider Partner"
        ],
        "summary": "Get Schema Request",
        "description": "Accepts a get Derived Data Schema Request to be used called by the Lender",
        "operationId": "getSchemaRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "schemaId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/derivedDataPartner/getSchemaResponse": {
      "post": {
        "tags": [
          "Data Provider Partner"
        ],
        "summary": "Get Schema Response",
        "description": "This api returns the expected schema from the derived data provider to the lender",
        "operationId": "getSchemaResponse",
        "requestBody": {
          "description": "Response by Derived Data Provider to Lender containing the requested Schema",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "response",
                  "productData",
                  "availableSchemas"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "availableSchemas": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "schemaId",
                        "identifiers"
                      ],
                      "properties": {
                        "schemaId": {
                          "type": "string",
                          "schema": "object",
                          "description": "The schema object defining the data schema and identifier schema"
                        },
                        "identifiers": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "identifier",
                              "identifierType"
                            ],
                            "properties": {
                              "identifier": {
                                "type": "string"
                              },
                              "identifierType": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "ack"
                  ],
                  "properties": {
                    "ack": {
                      "$ref": "#/components/schemas/Ack"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v4.0.0alpha/derivedDataPartner/getDataRequest": {
      "post": {
        "tags": [
          "Data Provider Partner"
        ],
        "summary": "Derived Data by identifiers and schema id",
        "description": "Accepts a Fetch request for Derived Data with the help of Schema Id and identifiers sent in the request. This api will be called by the lender on the Derived Data Provider.",
        "operationId": "getDerivedData",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "schemaId",
                  "identifier",
                  "loanApplicationId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  },
                  "schemaId": {
                    "type": "string"
                  },
                  "identifiers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "identifier",
                        "identifierType"
                      ],
                      "properties": {
                        "identifier": {
                          "type": "string"
                        },
                        "identifierType": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/derivedDataPartner/getDataResponse": {
      "post": {
        "tags": [
          "Data Provider Partner"
        ],
        "summary": "Get Derived Data Response",
        "description": "This api returns the expected data from the derived data provider to the lender",
        "operationId": "getDerivedDataResponse",
        "requestBody": {
          "description": "Response by Derived Data Provider to Lender containing the requested derived data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "response",
                  "productData",
                  "loanApplicationId",
                  "data"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "productData": {
                    "ref": "../../components/schemas/ProductData.yaml"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  },
                  "data": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Response Received",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "ack"
                  ],
                  "properties": {
                    "ack": {
                      "$ref": "#/components/schemas/Ack"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/v4.0.0alpha/kycPartner/initiateKYCRequest": {
      "post": {
        "tags": [
          "KYC Partner"
        ],
        "summary": "Initiate KYC Partner Request",
        "description": "This API is called by lender to KYC partner initiate the KYC process of the borrower after successfully accepting the final offer.",
        "operationId": "InitiateKYCRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "loanApplicationId",
                  "kyc"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string",
                    "examples": [
                      "t8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                    ]
                  },
                  "kyc": {
                    "$ref": "#/components/schemas/KYCDetailsRequest"
                  },
                  "baRedirectURL": {
                    "type": "string",
                    "description": "URL to which the borrower will be redirected after completing the KYC process from the Lenders KYC Page.",
                    "examples": [
                      "https://basite.com/kyccomplete?loanApplicationId=t8cc6822bd4bbb4eb1b9e1b4996fbff8acb&status=success"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/kycPartner/initiateKYCResponse": {
      "post": {
        "tags": [
          "KYC Partner"
        ],
        "summary": "Initiate KYC Partner Response",
        "description": "This API is called by the KYS partnet in response to initiate KYC requests. The partner returns the next step for KYC details submission. The KYC process will be carried out by the partner.",
        "operationId": "InitiateKYCResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "response",
                  "productData",
                  "loanApplicationId",
                  "kyc"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string",
                    "examples": [
                      "t8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                    ]
                  },
                  "kyc": {
                    "$ref": "#/components/schemas/KYCDetails"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/kycPartner/statusKYCRequest": {
      "post": {
        "tags": [
          "KYC Partner"
        ],
        "summary": "KYC Partner Status Request",
        "description": "This API is called by Lender to get the KYC status from partner. This API will be triggered just after the user completes the KYC process.",
        "operationId": "KYCStatusRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "loanApplicationId",
                  "kyc"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string"
                  },
                  "kyc": {
                    "type": "object",
                    "properties": {
                      "kycRefNo": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/kycPartner/statusKYCResponse": {
      "post": {
        "tags": [
          "KYC Partner"
        ],
        "summary": "KYC Partner Status Response",
        "description": "This API is called by the KYC partnet in response to initiate KYC response.",
        "operationId": "StatusKYCResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "response",
                  "productData",
                  "loanApplicationId",
                  "kyc"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanApplicationId": {
                    "type": "string",
                    "examples": [
                      "t8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
                    ]
                  },
                  "kyc": {
                    "$ref": "#/components/schemas/KYCDetails"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/disbursementPartner/getCatalogueRequest": {
      "post": {
        "tags": [
          "Disbursement Partner"
        ],
        "summary": "Get Catalogue Request",
        "description": "This endpoint is initiated by the LA on the Disbursement partner to get all the products available for the borrower.",
        "operationId": "GetCatalogueRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "filters": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "filterName": {
                          "type": "string"
                        },
                        "filterValue": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/disbursementPartner/getCatalogueResponse": {
      "post": {
        "tags": [
          "Disbursement Partner"
        ],
        "summary": "Get Disbursement Options Response",
        "description": "This endpoint is initiated by the Disbursement partner on the LA as a response to Get Disbursement Options returning all Disbursement Products available.",
        "operationId": "GetDisbursementOptionsResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "productId": {
                    "type": "string"
                  },
                  "disbursementProducts": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/CommerceProduct"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/disbursementPartner/finaliseOrderRequest": {
      "post": {
        "tags": [
          "Disbursement Partner"
        ],
        "summary": "Finalise Order Request",
        "description": "This endpoint can be initiated by LA / Lender on the disbursement partner to get the details of a specific product",
        "operationId": "FinaliseOrderRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "cart": {
                    "type": "object",
                    "properties": {
                      "items": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/CommerceProduct"
                        }
                      },
                      "shippingDetails": {
                        "$ref": "#/components/schemas/ContactDetails"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/disbursementPartner/finaliseOrderResponse": {
      "post": {
        "tags": [
          "Disbursement Partner"
        ],
        "summary": "Finalise Order Response",
        "description": "This endpoint is initiated by the DisbursementPartner in response to GetDisbursementProductDetailsRequest providing the details of a specific product.",
        "operationId": "FinaliseOrderResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "order": {
                    "type": "object",
                    "properties": {
                      "orderId": {
                        "type": "string",
                        "description": "The unique identifier for the order"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "SUCESS",
                          "FAILED"
                        ],
                        "description": "The status of the order"
                      },
                      "statusMessage": {
                        "type": "string",
                        "description": "The message against the order status"
                      },
                      "items": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/CommerceProduct"
                        }
                      },
                      "shippingDetails": {
                        "$ref": "#/components/schemas/ContactDetails"
                      },
                      "totalAmount": {
                        "type": "number",
                        "description": "The total amount of the order that will be come the loan application amount"
                      },
                      "performaInvoice": {
                        "$ref": "#/components/schemas/Document"
                      },
                      "payeeAccountDetails": {
                        "$ref": "#/components/schemas/AccountDetails",
                        "description": "The entity to which the amount is payable"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/collectionPartner/getCollectionsStatusRequest": {
      "post": {
        "tags": [
          "Collections Partner"
        ],
        "summary": "Trigger Repayment Status Request",
        "description": "This API is used by Lender on the Collections Partner to check the status of a previously initiated repayment transaction. In the case where collection is handled by Collection Management System (CMS), once the Collection Agent receives payment confirmation (including transaction reference number) from the Collection Management System, Collections Partner will send a request to the lender to check if a payment has been credited against the transaction Reference Number.",
        "operationId": "triggerRepaymentStatusRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "payment",
                  "loanId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "payment": {
                    "$ref": "#/components/schemas/Payment"
                  },
                  "loanId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/collectionPartner/getCollectionsStatusResponse": {
      "post": {
        "tags": [
          "Collections Partner"
        ],
        "summary": "Trigger Repayment Status Response",
        "description": "This API is used by Collections Partner on the Lender to check the status of a previously initiated repayment transaction. In the case where collection is handled by Collection Management System (CMS), once the Collection Partner receives payment confirmation (including transaction reference number) from the Collection Management System, Collections Partner will send a request to the lender to check if a payment has been credited against the transaction Reference Number.",
        "operationId": "triggerRepaymentStatusResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "payment",
                  "response",
                  "loanId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "payment": {
                    "$ref": "#/components/schemas/Payment"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "loanId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/collectionPartner/getPaymentMethodsRequest": {
      "post": {
        "tags": [
          "Collections Partner"
        ],
        "summary": "Get Payment Methods Request",
        "description": "This endpoint is initiated by the BA on the Collections Partner before the Set Repayment Plan request to present the borrower with the available repayment methods.",
        "operationId": "GetPaymentMethodsRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/collectionPartner/getPaymentMethodsResponse": {
      "post": {
        "tags": [
          "Collections Partner"
        ],
        "summary": "Get Payment Methods Response",
        "description": "This endpoint is initiated by the Collections partner on the LA as a response to Get Payment Methods returning all Collection Options available.",
        "operationId": "GetPaymentMethodsResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "paymentMethods": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/PaymentMethod"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/collectionPartner/triggerCollectionsRequest": {
      "post": {
        "tags": [
          "Collections Partner"
        ],
        "summary": "Trigger Collections Request",
        "description": "This API is invoked by the Lender to inform the Collections partner to trigger a repayment. This API will only be called when payment is routed to lender via collection agent.",
        "operationId": "triggerCollectionsRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "payment",
                  "loanId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "payment": {
                    "$ref": "#/components/schemas/Payment"
                  },
                  "paymentMethod": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  },
                  "loanId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/collectionPartner/triggerCollectionsResponse": {
      "post": {
        "tags": [
          "Collections Partner"
        ],
        "summary": "Trigger Collections Response",
        "description": "This API is invoked by the collections partner to the Lender. The collections partner generates a collection id which will be used by the Lender to query the status of collections.",
        "operationId": "triggerCollectionsResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "payment",
                  "response",
                  "loanId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "response": {
                    "$ref": "#/components/schemas/Response"
                  },
                  "payment": {
                    "$ref": "#/components/schemas/Payment"
                  },
                  "loanId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/collectionPartner/setupCollectionAccountRequest": {
      "post": {
        "tags": [
          "Collections Partner"
        ],
        "summary": "Setup Collection Account Request",
        "description": "This endpoint is initiated by the LA on the Collections Partner before the Set Repayment Plan request to present the borrower with the available repayment methods.",
        "operationId": "SetupCollectionAccountRequest",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "paymentMethod",
                  "loanApplication",
                  "loanId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanId": "string",
                  "paymentMethod": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  },
                  "loanApplication": {
                    "$ref": "#/components/schemas/LoanApplication"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    },
    "/v4.0.0alpha/collectionPartner/setupCollectionAccountResponse": {
      "post": {
        "tags": [
          "Collections Partner"
        ],
        "summary": "Setup Collection Account Response",
        "description": "This endpoint is initiated by the LA on the Collections Partner before the Set Repayment Plan request to present the borrower with the available repayment methods.",
        "operationId": "SetupCollectionAccountResponse",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "metadata",
                  "productData",
                  "paymentMethod",
                  "loanApplication",
                  "loanAccount",
                  "loanId"
                ],
                "properties": {
                  "metadata": {
                    "$ref": "#/components/schemas/MetaData"
                  },
                  "productData": {
                    "$ref": "#/components/schemas/ProductData"
                  },
                  "loanId": "string",
                  "paymentMethod": {
                    "$ref": "#/components/schemas/PaymentMethod"
                  },
                  "loanApplication": {
                    "$ref": "#/components/schemas/LoanApplication"
                  },
                  "loanAccount": {
                    "$ref": "#/components/schemas/AccountDetails"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Acknowledgement of Request Received",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ack"
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    },
    {
      "oAuth2Client": []
    }
  ],
  "components": {
    "schemas": {
      "MetaData": {
        "title": "metadata",
        "type": "object",
        "description": "Metadata specific to each API request.",
        "required": [
          "version",
          "orgId",
          "timestamp",
          "traceId",
          "requestId",
          "participantId"
        ],
        "properties": {
          "version": {
            "type": "string"
          },
          "originatorOrgId": {
            "type": "string",
            "description": "The organisation id on the Participant Registry."
          },
          "originatorParticipantId": {
            "type": "string",
            "description": "The participant id on the Participant Registry. This will be different for every role under the same organisation."
          },
          "timestamp": {
            "type": "string"
          },
          "traceId": {
            "type": "string"
          },
          "requestId": {
            "type": "string",
            "description": "UUID used to tie request and response and for idempotency"
          }
        }
      },
      "ProductData": {
        "title": "productData",
        "type": "object",
        "description": "Product Metadata specific to each API request.",
        "required": [
          "networkId",
          "productId"
        ],
        "properties": {
          "productId": {
            "type": "string",
            "description": "The product id on the Product Registry."
          },
          "productNetworkId": {
            "type": "string",
            "description": "The product network id on the Product Registry."
          }
        }
      },
      "LoanApplicationStatus": {
        "type": "string",
        "enum": [
          "CREATED",
          "PROCESSING",
          "CONSENT_INITIATED",
          "CONSENT_RECEIVED",
          "CONSENT_REJECTED",
          "OFFERED",
          "OFFER_ACCEPTED",
          "KYC_INITIATED",
          "KYC_COMPLETED",
          "KYC_FAILED",
          "KYC_REJECTED",
          "LOAN_AGREEMENT_INITIATED",
          "LOAN_AGREEMENT_COMPLETED",
          "LOAN_AGREEMENT_FAILED",
          "GRANTED",
          "REJECTED",
          "ACTION_REQUIRED",
          "DISBURSEMENT_INITIATED",
          "DISBURSEMENT_COMPLETED",
          "DISBURSED_FAILED",
          "CLOSED",
          "CANCELLED"
        ]
      },
      "Document": {
        "type": "object",
        "required": [
          "source",
          "sourceIdentifier",
          "format",
          "reference",
          "type",
          "isDataInline",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "examples": [
              "docref12"
            ]
          },
          "source": {
            "type": "string",
            "default": "",
            "enum": [
              "GSTN",
              "AA",
              "FIP",
              "FSR",
              "FIU",
              "USER",
              "OTHER"
            ]
          },
          "sourceIdentifier": {
            "type": "string",
            "examples": [
              "GSTN"
            ]
          },
          "format": {
            "type": "string",
            "enum": [
              "JSON",
              "DOC",
              "IMAGE",
              "CSV",
              "XML",
              "PDF",
              "URL"
            ]
          },
          "reference": {
            "type": "string",
            "examples": [
              "docref12"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "GST_PROFILE",
              "GSTN_B2B_INVOICE",
              "PAN",
              "AADHAAR",
              "DRIVING_LICENSE",
              "PASSPORT",
              "OTHER"
            ]
          },
          "isDataInline": {
            "type": "boolean"
          },
          "data": {
            "type": "string",
            "examples": [
              "eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ"
            ]
          }
        }
      },
      "ExtensibleData": {
        "type": "object",
        "description": "This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements."
      },
      "AdditionalIdentifier": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string",
            "examples": [
              "AADHAAR"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData"
          }
        }
      },
      "Address": {
        "title": "Root",
        "type": "object",
        "required": [
          "hba",
          "srl",
          "pinCode",
          "state",
          "country"
        ],
        "properties": {
          "hba": {
            "type": "string",
            "examples": [
              "<House/Building/Apartment>"
            ]
          },
          "srl": {
            "type": "string",
            "examples": [
              "<Street/Road/Lane>"
            ]
          },
          "landmark": {
            "type": "string"
          },
          "als": {
            "type": "string",
            "examples": [
              "<Area/Locality/Sector>"
            ]
          },
          "vtc": {
            "type": "string",
            "examples": [
              "<Village/Town/City>"
            ]
          },
          "pinCode": {
            "type": "string",
            "examples": [
              ""
            ]
          },
          "po": {
            "type": "string",
            "examples": [
              ""
            ]
          },
          "district": {
            "type": "string",
            "examples": [
              ""
            ]
          },
          "state": {
            "type": "string",
            "examples": [
              ""
            ]
          },
          "country": {
            "type": "string",
            "examples": [
              ""
            ]
          },
          "url": {
            "type": "string",
            "examples": [
              "<digital address>"
            ]
          },
          "latitude": {
            "type": "string",
            "examples": [
              ""
            ]
          },
          "longitude": {
            "type": "string",
            "examples": [
              ""
            ]
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData"
          }
        }
      },
      "ContactDetails": {
        "type": "object",
        "required": [
          "type",
          "phone"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "PRIMARY",
              "OTHER"
            ]
          },
          "desctiption": {
            "type": "string"
          },
          "phone": {
            "type": "string",
            "examples": [
              "7777777777"
            ]
          },
          "email": {
            "type": "string",
            "examples": [
              "johndoe@defenterprises"
            ]
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData"
          }
        }
      },
      "Borrower": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "examples": [
              "CPAA1234A"
            ]
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalIdentifier"
            }
          },
          "name": {
            "type": "string",
            "examples": [
              "John doe"
            ]
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactDetails"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData"
          },
          "aaIdentifier": {
            "type": "string",
            "example": "user@aa",
            "description": "For AA based flows, account aggregator identifier will be provided by the borrower"
          }
        }
      },
      "Guarantor": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType",
          "category",
          "contactDetails",
          "documents"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "examples": [
              "CPAA1234A"
            ]
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "description": {
            "type": "string",
            "examples": [
              ""
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalIdentifier"
            }
          },
          "name": {
            "type": "string",
            "examples": [
              "John doe"
            ]
          },
          "relationshipWithBorrower": {
            "type": "string",
            "examples": [
              "Father"
            ]
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactDetails"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData"
          }
        }
      },
      "Applicant": {
        "type": "object",
        "required": [
          "primaryId",
          "primaryIdType"
        ],
        "properties": {
          "primaryId": {
            "type": "string",
            "examples": [
              "<PAN NO.>"
            ]
          },
          "primaryIdType": {
            "type": "string",
            "enum": [
              "PAN",
              "MOBILE",
              "AADHAAR"
            ]
          },
          "additionalIdentifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdditionalIdentifier"
            }
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "ORGANIZATION",
              "INDIVIDUAL"
            ]
          },
          "relationshipWithBorrower": {
            "type": "string"
          },
          "contactDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ContactDetails"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData"
          }
        }
      },
      "LoanTenure": {
        "type": "object",
        "required": [
          "duration",
          "unit"
        ],
        "properties": {
          "duration": {
            "type": "number"
          },
          "unit": {
            "type": "string",
            "enum": [
              "MONTH",
              "DAY",
              "YEAR"
            ]
          }
        }
      },
      "LoanAgreement": {
        "type": "object",
        "required": [
          "type",
          "data"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "TEXT",
              "DOCUMENT_URL",
              "REDIRECT_TO_LENDER_URL"
            ]
          },
          "data": {
            "type": "string"
          }
        }
      },
      "ChargeDetails": {
        "type": "object",
        "required": [
          "chargeType",
          "data"
        ],
        "properties": {
          "chargeType": {
            "type": "string",
            "enum": [
              "FIXED_AMOUNT",
              "RATE_BASED"
            ]
          },
          "data": {
            "type": "object",
            "properties": {
              "rate": {
                "type": "number",
                "format": "float",
                "examples": [
                  "6"
                ]
              },
              "amount": {
                "type": "number",
                "format": "float"
              },
              "applicableParameter": {
                "type": "string",
                "enum": [
                  "TOTAL_LOAN_AMOUNT",
                  "OUTSTANDING_PAYABLE_AMOUNT",
                  "EMI",
                  "REPAYMENT_PRINCIPAL"
                ]
              },
              "description": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData"
          }
        }
      },
      "Charges": {
        "type": "object",
        "properties": {
          "prepayment": {
            "$ref": "#/components/schemas/ChargeDetails"
          },
          "bounce": {
            "$ref": "#/components/schemas/ChargeDetails"
          },
          "latePayment": {
            "$ref": "#/components/schemas/ChargeDetails"
          },
          "processing": {
            "$ref": "#/components/schemas/ChargeDetails"
          },
          "other": {
            "$ref": "#/components/schemas/ChargeDetails"
          }
        }
      },
      "LoanTerms": {
        "type": "object",
        "required": [
          "requestedAmount",
          "currency"
        ],
        "properties": {
          "requestedAmount": {
            "type": "number",
            "format": "float",
            "examples": [
              "50000.00"
            ]
          },
          "currency": {
            "type": "string",
            "examples": [
              "INR"
            ]
          },
          "sanctionedAmount": {
            "type": "number",
            "format": "float",
            "examples": [
              "5000.00"
            ]
          },
          "netDisbursedAmount": {
            "type": "number",
            "format": "float",
            "examples": [
              "5000.00"
            ]
          },
          "interestType": {
            "type": "string",
            "enum": [
              "FIXED",
              "FLOATING"
            ]
          },
          "interestRate": {
            "type": "number",
            "format": "float",
            "examples": [
              "6.50"
            ]
          },
          "annualPercentageRate": {
            "type": "number",
            "format": "float",
            "examples": [
              "6.50"
            ]
          },
          "coolingOffPeriod": {
            "$ref": "#/components/schemas/LoanTenure"
          },
          "totalRepayableAmount": {
            "type": "number",
            "format": "float"
          },
          "interestAmount": {
            "type": "number",
            "format": "float"
          },
          "description": {
            "type": "string"
          },
          "tenure": {
            "$ref": "#/components/schemas/LoanTenure"
          },
          "legalAgreement": {
            "$ref": "#/components/schemas/LoanAgreement"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "charges": {
            "$ref": "#/components/schemas/Charges"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData"
          }
        }
      },
      "LoanApplication": {
        "type": "object",
        "required": [
          "createdDate",
          "loanApplicationId",
          "loanType",
          "borrower",
          "pledgedDocuments",
          "guarantors",
          "applicants",
          "terms",
          "loanApplicationStatus"
        ],
        "properties": {
          "createdDate": {
            "type": "string",
            "format": "date"
          },
          "loanApplicationId": {
            "type": "string"
          },
          "loanApplicationStatus": {
            "$ref": "#/components/schemas/LoanApplicationStatus"
          },
          "pledgedDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "borrower": {
            "$ref": "#/components/schemas/Borrower"
          },
          "guarantors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Guarantor"
            }
          },
          "applicants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Applicant"
            }
          },
          "terms": {
            "type": "object",
            "$ref": "#/components/schemas/LoanTerms"
          },
          "url": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "creditGuarantees": {
            "type": "object",
            "properties": {
              "cgtmseEligible": {
                "type": "boolean"
              }
            }
          },
          "extensibleData": "./ExtensibleData.yaml"
        }
      },
      "Ack": {
        "type": "object",
        "required": [
          "error",
          "traceId",
          "timestamp"
        ],
        "properties": {
          "error": {
            "type": "string",
            "examples": [
              "0"
            ]
          },
          "traceId": {
            "type": "string",
            "examples": [
              "e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb"
            ]
          },
          "timestamp": {
            "type": "string",
            "examples": [
              "2018-12-06T11:39:57.153Z"
            ]
          }
        }
      },
      "Response": {
        "type": "object",
        "description": "Status of response. Whether success or has encountered error",
        "required": [
          "status"
        ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "ERROR"
            ]
          },
          "responseDetail": {
            "type": "string"
          }
        }
      },
      "Consent": {
        "type": "object",
        "properties": {
          "consentFetchType": {
            "type": "string",
            "enum": [
              "ONETIME",
              "PERIODIC"
            ]
          },
          "vua": {
            "type": "string",
            "examples": [
              "user@aa.in"
            ]
          },
          "description": {
            "type": "string"
          },
          "isAggregationEnabled": {
            "type": "boolean",
            "examples": [
              true
            ]
          },
          "consentAggregationId": {
            "type": "string",
            "examples": [
              "e8cc6822bd4bbb4eb1b9e1b4996fbff8acd"
            ]
          },
          "consentHandle": {
            "type": "string"
          },
          "consentStatus": {
            "type": "string",
            "enum": [
              "READY",
              "PENDING",
              "FAILED"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData"
          }
        }
      },
      "KYCDetails": {
        "type": "object",
        "properties": {
          "kycRefNo": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "business": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "CKYC",
                  "UDYAM",
                  "OFFLINE_AADHAAR"
                ]
              },
              "scale": {
                "type": "string",
                "enum": [
                  "MICRO",
                  "SMALL",
                  "MEDIUM"
                ]
              },
              "category": {
                "type": "string",
                "enum": [
                  "SERVICE",
                  "MANUFACTURING"
                ]
              },
              "name": {
                "type": "string"
              },
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "email": {
                "type": "string"
              },
              "phoneNumber": {
                "type": "string"
              },
              "incorporationDate": {
                "type": "string",
                "format": "date"
              },
              "commencementDate": {
                "type": "string",
                "format": "date"
              },
              "udyam": {
                "type": "object",
                "properties": {
                  "registrationNumber": {
                    "type": "string"
                  },
                  "registrationDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "extensibleData": {
                    "$ref": "#/components/schemas/ExtensibleData"
                  }
                }
              },
              "status": {
                "type": "string",
                "enum": [
                  "SUCCESS",
                  "REJECTED",
                  "PENDING",
                  "ACTION_REQUIRED"
                ]
              },
              "extensibleData": {
                "$ref": "#/components/schemas/ExtensibleData"
              }
            }
          },
          "individual": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "CKYC",
                  "UDYAM",
                  "OFFLINE_AADHAAR"
                ]
              },
              "name": {
                "type": "string"
              },
              "dob": {
                "type": "string"
              },
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "status": {
                "type": "string",
                "enum": [
                  "SUCCESS",
                  "REJECTED",
                  "PENDING",
                  "ACTION_REQUIRED"
                ]
              },
              "email": {
                "type": "string"
              },
              "phoneNumber": {
                "type": "string"
              },
              "extensibleData": {
                "$ref": "#/components/schemas/ExtensibleData"
              }
            }
          },
          "next": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "REDIRECT"
                ]
              },
              "data": {
                "type": "object",
                "properties": {
                  "url": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData"
          }
        }
      },
      "PaymentPlan": {
        "type": "object",
        "required": [
          "id",
          "automatic",
          "scheduleType",
          "noOfInstallments",
          "totalAmount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "shortDescription": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "payNowAllowed": {
            "type": "boolean",
            "examples": [
              false
            ]
          },
          "editPlanAllowed": {
            "type": "boolean",
            "examples": [
              false
            ]
          },
          "changeMethodAllowed": {
            "type": "boolean",
            "examples": [
              false
            ]
          },
          "automatic": {
            "type": "boolean",
            "examples": [
              false
            ]
          },
          "scheduleType": {
            "type": "string",
            "enum": [
              "RECURRING",
              "ONE_TIME",
              "AS_PRESENTED"
            ]
          },
          "noOfInstallment": {
            "type": "number"
          },
          "frequency": {
            "type": "string",
            "enum": [
              "MONTHLY",
              "WEEKLY",
              "QUARTERLY",
              "HALF_YEARLY",
              "YEARLY"
            ]
          },
          "tenure": {
            "$ref": "#/components/schemas/LoanTenure"
          },
          "totalAmount": {
            "type": "number",
            "format": "float"
          },
          "principal": {
            "type": "number",
            "format": "float"
          },
          "interestAmount": {
            "type": "number",
            "format": "float"
          },
          "penalty": {
            "type": "number",
            "format": "float"
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "examples": [
              "18-12-2020"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE",
              "PENDING_AUTH"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData"
          }
        }
      },
      "AccountDetailsData": {
        "type": "object",
        "properties": {
          "accountType": {
            "type": "string",
            "enum": [
              "CURRENT",
              "SAVING",
              "OVERDRAFT",
              "ESCROW",
              "WALLET"
            ]
          },
          "accountIFSC": {
            "type": "string",
            "examples": [
              "ICK000856"
            ]
          },
          "accountNumber": {
            "type": "string",
            "examples": [
              "11250789101486249090"
            ]
          },
          "vpa": {
            "type": "string",
            "examples": [
              ""
            ]
          },
          "maskedAccountNumber": {
            "type": "string",
            "examples": [
              "XXXXXXXXX9090"
            ]
          },
          "accountHolderName": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "examples": [
              ""
            ]
          }
        }
      },
      "AccountDetails": {
        "type": "object",
        "required": [
          "accountDataType",
          "data"
        ],
        "properties": {
          "id": {
            "type": "string",
            "examples": [
              ""
            ]
          },
          "description": {
            "type": "string",
            "examples": [
              ""
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "accountDataType": {
            "type": "string",
            "enum": [
              "ACCOUNT",
              "VPA"
            ]
          },
          "data": {
            "$ref": "#/components/schemas/AccountDetailsData"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData"
          }
        }
      },
      "Disbursement": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlan"
            }
          },
          "accountDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountDetails"
            }
          }
        }
      },
      "Repayment": {
        "type": "object",
        "required": [
          "plans"
        ],
        "properties": {
          "plans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPlan"
            }
          }
        }
      },
      "Offer": {
        "type": "object",
        "required": [
          "id",
          "validTill",
          "terms",
          "disbursement",
          "repayment"
        ],
        "properties": {
          "id": {
            "type": "string",
            "examples": [
              "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
            ]
          },
          "isMappedtoDocument": {
            "type": "boolean"
          },
          "documentId": {
            "type": "string"
          },
          "validTill": {
            "type": "string",
            "format": "date"
          },
          "terms": {
            "$ref": "#/components/schemas/LoanTerms"
          },
          "disbursement": {
            "$ref": "#/components/schemas/Disbursement"
          },
          "repayment": {
            "$ref": "#/components/schemas/Repayment"
          },
          "description": {
            "type": "string"
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Document"
            }
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData"
          }
        }
      },
      "RejectionDetail": {
        "type": "object",
        "required": [
          "reason",
          "description"
        ],
        "properties": {
          "reason": {
            "type": "string",
            "enum": [
              "LOW_CREDIT_SCORE",
              "FRAUD",
              "DOC_IRREGULARITIES",
              "OTHERS",
              "AA_FAILED"
            ]
          },
          "description": {
            "type": "string",
            "examples": [
              "Credit score below 600"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData"
          }
        }
      },
      "Reference": {
        "type": "object",
        "required": [
          "object",
          "value"
        ],
        "properties": {
          "object": {
            "type": "string",
            "examples": [
              "documents"
            ]
          },
          "value": {
            "type": "string",
            "examples": [
              "INVOICE_GSTN_INV2011"
            ]
          }
        }
      },
      "ActionRequired": {
        "type": "object",
        "required": [
          "actionType",
          "description",
          "reference"
        ],
        "properties": {
          "actionType": {
            "type": "string",
            "enum": [
              "ADD_DOCUMENT",
              "RESUBMIT_DOCUMENT",
              "ADDITIONAL_DATA",
              "OTHER"
            ]
          },
          "description": {
            "type": "string",
            "examples": [
              "DL number not visible"
            ]
          },
          "reference": {
            "$ref": "#/components/schemas/Reference"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData"
          }
        }
      },
      "LoanApplicationWithOffer": {
        "type": "object",
        "required": [
          "loanApplicationId",
          "loanApplicationStatus",
          "kyc",
          "offers"
        ],
        "properties": {
          "createdDate": {
            "type": "string",
            "format": "date",
            "description": "The time when the loan application was created"
          },
          "loanApplicationId": {
            "type": "string",
            "description": "UUID for the loan application. Generated by BA"
          },
          "loanApplicationStatus": {
            "$ref": "#/components/schemas/LoanApplicationStatus"
          },
          "kyc": {
            "$ref": "#/components/schemas/KYCDetails",
            "description": "KYC details"
          },
          "offers": {
            "type": "array",
            "description": "Offers given by lender for a loan application",
            "items": {
              "$ref": "#/components/schemas/Offer"
            }
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "description": "A short description of the loan application"
          },
          "url": {
            "type": "string",
            "maxLength": 1000,
            "description": "For any additional data  that needs to be passed as a link"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData",
            "description": "For any additional data that needs to be added"
          },
          "rejectionDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RejectionDetail"
            },
            "description": "To be filled if the status of the loan is REJECTED. This object will have the details of why the loan application was rejected"
          },
          "actionRequired": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ActionRequired"
            },
            "description": "To be filled if the status of the loan is ACTION_REQUIRED. This object captures the details of any action that the lender wants the borrower to do"
          }
        }
      },
      "KYCDetailsRequest": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "business": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "CKYC",
                  "UDYAM",
                  "OFFLINE_AADHAAR"
                ]
              },
              "scale": {
                "type": "string",
                "enum": [
                  "MICRO",
                  "SMALL",
                  "MEDIUM"
                ]
              },
              "category": {
                "type": "string",
                "enum": [
                  "SERVICE",
                  "MANUFACTURING"
                ]
              },
              "name": {
                "type": "string"
              },
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "email": {
                "type": "string"
              },
              "phoneNumber": {
                "type": "string"
              },
              "incorporationDate": {
                "type": "string",
                "format": "date"
              },
              "commencementDate": {
                "type": "string",
                "format": "date"
              },
              "udyam": {
                "type": "object",
                "properties": {
                  "registrationNumber": {
                    "type": "string"
                  },
                  "registrationDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "extensibleData": {
                    "$ref": "#/components/schemas/ExtensibleData"
                  }
                }
              },
              "extensibleData": {
                "$ref": "#/components/schemas/ExtensibleData"
              }
            }
          },
          "individual": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "CKYC",
                  "UDYAM",
                  "OFFLINE_AADHAAR"
                ]
              },
              "name": {
                "type": "string"
              },
              "dob": {
                "type": "string"
              },
              "address": {
                "$ref": "#/components/schemas/Address"
              },
              "email": {
                "type": "string"
              },
              "phoneNumber": {
                "type": "string"
              },
              "extensibleData": {
                "$ref": "#/components/schemas/ExtensibleData"
              }
            }
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData"
          }
        }
      },
      "PaymentMethod": {
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "EMANDATE_UPI",
              "ELIEN",
              "ENACH",
              "ANY"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "CANCELLED",
              "PAUSE"
            ]
          },
          "data": {
            "type": "object",
            "description": "Data for different type will be defined in later version of APIs. As of now, BA can define it as per their requirement",
            "$ref": "#/components/schemas/ExtensibleData"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData"
          }
        }
      },
      "Payment": {
        "type": "object",
        "required": [
          "id",
          "totalAmount",
          "status",
          "paymentMethodType"
        ],
        "properties": {
          "totalAmount": {
            "type": "number",
            "format": "float"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "status": {
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PENDING_AUTH"
            ]
          },
          "installmentNumber": {
            "type": "number"
          },
          "txnRefNo": {
            "type": "string",
            "examples": [
              4618602124
            ]
          },
          "id": {
            "type": "string",
            "examples": [
              "e8cc6822bd4bbb4eb1b9e1b4996fbff8acb"
            ]
          },
          "description": {
            "type": "string"
          },
          "principal": {
            "type": "number",
            "format": "float"
          },
          "interestAmount": {
            "type": "number",
            "format": "float"
          },
          "fee": {
            "type": "number",
            "format": "float"
          },
          "penalty": {
            "type": "number",
            "format": "float"
          },
          "useSavedPaymentOption": {
            "type": "boolean",
            "examples": [
              false
            ]
          },
          "paymentMethodType": {
            "type": "string",
            "default": "",
            "enum": [
              "UPI",
              "EMANDATE_UPI",
              "NETBANKING",
              "ENACH",
              "DEBIT_CARD"
            ]
          },
          "paymentUrl": {
            "type": "string",
            "examples": [
              "https://abc-bank/payment"
            ]
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData"
          }
        }
      },
      "LoanStatus": {
        "type": "string",
        "enum": [
          "EMI_DUE",
          "EMI_PAID",
          "EMI_OVERDUE",
          "EMI_WAIVED",
          "LOAN_CLOSED",
          "NPA",
          "PARTIALLY_PAID",
          "PRECLOSURE",
          "SETTLEMENT_STARTED",
          "SETTLEMENT_COMPLETED",
          "SETTLEMENT_FAILED",
          "SETTLEMENT_PAID",
          "HEALTHY"
        ]
      },
      "Transaction": {
        "type": "object",
        "required": [
          "date",
          "narration",
          "txnRefNo",
          "amount",
          "type",
          "closingBalance"
        ],
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "narration": {
            "type": "string"
          },
          "txnRefNo": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "DEPOSIT",
              "WITHDRAWL"
            ]
          },
          "closingBalance": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "extensibleData": {
            "$ref": "#/components/schemas/ExtensibleData"
          }
        }
      },
      "CommerceProductQuantity": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "examples": [
              "100"
            ]
          },
          "unit": {
            "type": "string",
            "examples": [
              "KG"
            ]
          }
        },
        "extensibleData": {
          "$ref": "./ExtensibleData.yaml"
        }
      },
      "CommerceProduct": {
        "type": "object",
        "required": [
          "id",
          "name",
          "description",
          "price",
          "currency",
          "accountDetails"
        ],
        "properties": {
          "id": {
            "type": "string",
            "examples": [
              ""
            ]
          },
          "name": {
            "type": "string",
            "examples": [
              "Organic Vermicompost Fertilizer Manure 10 KG"
            ]
          },
          "description": {
            "type": "string",
            "examples": [
              "Using various species of worms, usually red wigglers, white worms, and other earthworms, to create a mixture of decomposing vegetable or food waste."
            ]
          },
          "price": {
            "type": "string",
            "examples": [
              "1000"
            ]
          },
          "thumbnail": {
            "type": "string",
            "examples": [
              "http://www.example.com/images/1.jpg"
            ]
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string",
              "examples": [
                "http://www.example.com/images/1.jpg"
              ]
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "examples": [
                "Organic",
                "Fertilizer",
                "Manure"
              ]
            }
          },
          "currency": {
            "type": "string",
            "examples": [
              "INR"
            ]
          },
          "quantity": {
            "$ref": "#/components/schemas/CommerceProductQuantity",
            "examples": [
              "Will be available quantity as a part of the Catalogue Request",
              "Will be ordered quantity as a part of the Finalise Order Request"
            ]
          }
        }
      }
    }
  }
}