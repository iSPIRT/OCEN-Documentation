openapi: 3.0.2
info:
  version: 1.0.0
  title: ispirt.in/
  contact:
    email: community@ispirt.in
    url: https://ispirt.in/
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  x-logo:
    url: ./images/logo.svg
  description: |
    # Introduction

    OCEN 4.0: Open Credit Enablement Network specification APIs

    India is starved of access to formal, affordable credit. There is a massive market opportunity to be tapped here that has been inhibited because the current rails for flow of capital to the untapped market are broken.

    They are broken for the lenders, to be able to reach out to these prospective borrowers and surface creditworthy borrowers. Few of the many reasons include high cost of borrower acquisition and time consuming custom third party tie-ups with loan originators.

    They are broken for the marketplaces to connect their customers with lenders. The custom integrations and manual processes are costly and time consuming. The Turnaround Time to get loans deposited to customers is high and their ability to provide custom financial products quickly is restricted, owing to implementation challenges.

    Sourcing, identity verification, underwriting, disbursement, recollections and dispute management are few of the many responsibilities managed by a lender today. Historically, the best lenders have had to excel at each of these skills in order to maximize their profit pools and serve the larger and larger markets.

    OCEN is an initiative to unbundle lending and enable the creation of specialized entities, each specialized at one part of the job. Therefore, we envision the future of lending to be a partnership between multiple firms individually focused on sourcing/distribution, identity verification, underwriting, capital arrangement, recollections, etc. The entities like marketplaces who have high business-connect with their customers (businesses or individuals), can embed credit offerings in their applications now. These entities are referred to as ‘Loan Agents’ (LAs) and were previously referred to as  'Loan Service Providers' (LSPs).

    LA is a departure from the Direct Sourcing Agent (DSA) model and is an 'agent of the borrower'. LA explains to borrowers their 'bill of rights' ensuring transparency and safeguarding of borrower interests. It educates them about the various credit product offerings, pricing and more details. It helps them get access to formal, affordable credit at low interest rates and collaborates with lenders to create more tailored offerings for borrowers.

    A reference pilot was created to showcase the power of the above idea in the GST SAHAY pilot project that used the OCEN 3.3 APIs. In its simplest form, it's a loan marketplace that enables SMEs to compare loan offers from multiple lenders and choose the best one. In its more advanced version, this LA would be akin to a borrower’s financial advisor, looking after their interests, fetching the best offers and advising the customer to make good decisions.

    In the longer run, it is envisioned that many more LAs (with apps) will be created. Each of these would focus on distinct borrower pools and build the specialized experiences suited to their customers. This would allow lenders to focus purely on their underwriting and collections logic and cater to diverse collaborations with the LAs.

    This is a manifestation of our efforts to democratise credit.

    # Terminology

    Following is the list of all abbreviations used in the document

    | Acronym | Expansion |
    | --- | --- |
    | AA | Account Aggregator |
    | LA | Loan Agent |
    | LSP | Loan Service Provider (see LA) |
    | OCEN | Open Credit Enablement Network |

    # Changes in Version 4.0

    This is version 4.0 of the OCEN Specification. This is an update to the earlier OCEN APIs Specification v3.3 used by the GST SAHAY pilot.

    OCEN v3.3 API Specification is implemented by the LSP and the Lender entities. The entities directly communicate with each other as there is only one LSP in the architecture.  

    The new OCEN 4.0 version enables multiple participants in the ecosystem across various roles.  Additionally, apart from the API specification, this version also includes 3 new components (Auth service, Product registry and Participant Registry) that enable the coordination between the multiple participants in the system. 

    # Participant Roles 

    OCEN 4.0 supports the following different roles for participants:
    - Lender - Creates and owns the product 
    - Loan Agent (LA) - Creates a Product Group - the network of participants needed to fulfil all the needs to the product such as collections partner, disbursement partner, etc and serves as the agent of the borrower by surfacing the offers and enabling the loan application process  
    - Derived Data Provider (DDP) - Enables better underwriting for the lender by providing additional data about the borrower or about the market of the product 
    - Disbursement Agent (DA) - Enables disbursement of the loan
    - Collections Agent (CA) - Enables monitoring and collections post disbursement

    # OCEN 4.0 Components

    Apart from the API specification for the participants to communicate with each other, OCEN 4.0 includes 3 components that enable coordination between the different participants in the system - 
    - Auth Service
    - Product registry and 
    - Participant Registry 

    ## Auth Service
    The Auth service addresses two main concerns in the ecosystem:

    1. Identity of the entity accessing an endpoint
    2. Integrity and non-repudiation so entities cannot deny their actions after performing any operation

    The Auth service enables both concerns by providing API access keys for authentication of every request as well as signing every request/response with the security certificates.

    ## Product Registry

    Web portal where Lenders in the OCEN ecosystem register their products. Once a product is created, participants such as LAs registered in the Participant registry will be able to view and subscribe to these products. The Product Registry allows LAs and other participants to easily discover new products for their borrowers from different lenders. The Product Registry also enables Lenders to reach new borrowers via the LAs that subscribe to the products. 

    ## Participant Registry

    Web portal where all the participants in the OCEN ecosystem register themselves. Post approval, participants will be able to fetch access keys to use in making the API calls. 

    # High Level Architecture
    The following is a high-level sequence diagram of the OCEN 4.0 flow for the initial phases from Product creation through loan granting that highlights the role of the above components. The end-to-end flow can be split into 3 phases:
    1. Onboarding
    2. Loan Application and Processing
    3. Post-Disbursement

    > To be updated

    ![OCEN - High level architecture](./images/ocen-high-level-architecture.png)

    # Participant Overview
    Below are the technical requirements and the end-to-end flow from the perspective of each participant in the ecosystem.

    ## Lender Overview
    Below is the overview of the end-to-end flow from the perspective of a Lender.

    ### Onboarding Phase
    Lenders first need to be onboarded onto the Participant Registry with their basic data. Once approved, they can use the API access key from the Participant Registry portal for making the API calls.

    Lenders will then create the product in the Product Registry portal with all necessary attributes such as:
    - Product category
    - Borrower types
    - Data requirements
    - Loan workflow configurations - Collections, Disbursement, etc.
     
    Once a product has been created and added to the portal, all participants will be able to discover the product. Participants can then subscribe to any of the existing products that need their role as part of the product’s loan workflow.

    The Lender will serve as the OWNER of the product and is the only participant who can change the product attributes subsequently.

    Post product-creation, Lenders get added to Product Groups by Loan Agents to serve borrowers in their network. They then start receiving Loan Application requests.

    *There are no API calls and implementation in this phase.*

    ### Loan Application and Processing Phase
    Lenders receive Loan Application requests from the Loan Agent, request Consent from the borrower and initiate the loan Offer. Upon acceptance of the Offer, the Lender performs the borrower KYC, confirms the loan disbursement and repayment terms with the borrower and then grants the loan. 

    The handshake and the steps in this phase follow the APIs defined in the APIs list. 

    ### Post-Disbursement Phase
    Post-disbursement of the loan, any disputes from the borrower are handled by the Lender via the Loan Dispute APIs in the APIs list.

    ### Metadata APIs
    In addition to the above, the Lender will maintain a Heartbeat API (see APIs list) to indicate the health status of their systems to the rest of the network.

    ## LA Overview
    Below is the overview of the end-to-end flow from the perspective of a Loan Agent participant across the 3 phases of the OCEN 4.0 flow.

    ### Onboarding Phase
    LAs first need to be onboarded onto the Participant Registry with their basic data. Once approved, they can use the API access key from the Participant Registry portal for making the API calls.

    Loan Agents in the ecosystem will then be able to drive the product life cycle by inviting other necessary participants needed in the product’s loan workflow. Once registered in the portal, LAs can create a Product Group and invite other participants (Collections, Disbursement partners and Derived Data Providers) for a particular product.

    LAs also need to select an SRO who will manage any dispute resolution issues for them and will serve as the guardrails against bad actors in the ecosystem.

    There are no API calls and implementation in this phase.

    ### Loan Application and Processing Phase
    LAs forward the Loan Application requests to the Lender. They then drive the Loan Application process with the lender by enabling the Lender to get Consent from the borrower and then to provide the loan Offer. Upon acceptance of the Offer by the borrower, the LA enables the Lender to perform the borrower KYC, confirm the loan disbursement and repayment terms with the borrower and then to grant the loan. 

    The handshake and the steps in this phase follow the APIs defined in the APIs list. 

    ### Post-Disbursement Phase
    Post-disbursement of the loan, any disputes from the borrower are forwarded to the Lender by the LA via the Loan Dispute APIs (see APIs list).

    ### Metadata APIs
    In addition to the above, the LA will maintain a Heartbeat API (see APIs list) to indicate the health status of their systems to the rest of the network.

    # API Design Principles

    ## Async design
    By design, all APIs are designed to enable end-to-end flows asynchronously. All requests use the requestId field for the purposes for mapping responses to their respective requests. And each request generates a standard acknowledgement from the other end while the callee (typically Lender) processes the request. API callers (typically LA) can poll for the status of the operation using a webhook. Thus each operation will have two separate APIs - one from the caller to submit the request and another async response back from the callee when the operation has completed. 

    For example: Create Loan Application operation has the following 2 APIs:
    - CreateLoanApplicationRequest -> Request sent by LA to the Lender
    - CreateLoanApplicationResponse -> Async Response sent by Lender to LA

    ## Idempotency
    All request calls should be idempotent on the requestId field i.e. two calls to CreateLoanApplication with the same requestId shouldn’t result in two applications to be created. Callees are expected to return the same response as sent earlier for a duplicate request.

    ## Complete Request Objects 
    All API calls and interactions are designed to include complete request objects instead of just the object identifiers in the request / responses. This design is to enable caller and callee to be able to process the request without needing to look up the attributes and other details.

    ## Security

    > To be updated

    All participants must follow the security requirements while transmitting data over API calls. On a high level, these are the security aspects that need to be ensured.

    1. HTTPS - All API calls must be done securely over HTTPS
    2. Two-way TLS -  The system should use Two-way TLS to ensure that both parties can send the information securely
    3. Digital Signature - All communication between the participants should be digitally signed as per the JSON Web Signature Specification
    4. Post participant registration with the Participant Registry, the private / public keys for authentication will be available in the portal

    ### What is two-way TLS/SSL
    The credit system that we are building is an asynchronous system and we need to ensure that both systems follow Transport Layer Security (TLS) Protocol to communicate with each other. In Normal TLS, the client first checks the authenticity of the server. However, the server does not try to identify the client. Since, in our case, we need to verify the identities of both the systems involved, “Two Way SSL” needs to be used. "Two-Way SSL" is usually called TLS/SSL with client certificate authentication because both parties authenticate each other.

    # API List

    Following is the list of all APIs part of the OCEN 4.0 specification.

    ## Loan Application APIs
    | API Name | Caller | Callee | Description |
    | ---- | ---- | ---- | ---- | 
    | Create Loan Applications Request | LA | Lender | Create Loan applications endpoint available on Lender to be used by LA | 
    | Create Loan Applications Response | Lender | LA | This is the response for Create Loan Applications but invoked by the lender. No offers are rolled out as part of this API. If the lender system finds preliminary information sufficient for doing the loan processing, it will send “PROCESSING” as the status. Otherwise, it can reject the application citing a reason for the same. | 

    ## Consent APIs
    | API Name | Caller | Callee | Description | 
    | ---- | ---- | ---- | ---- | 
    | Consent Handle Request | LA | Lender | Create consent handle with Account Aggregator. This API is used to request the lenders to send a consent request for fetching the bank account statements, GST historical data. The lender (FIU) checks with the AA and creates a consent handle internally once this API is triggered | 
    | Consent Handle Response | Lender | LA | Invoked by lender to send consent handle created in Account Aggregator. | 
    | Consent State Update Request | LA | Lender | Invoked by LA to inform Lenders of the consent journey state once the customer has interacted with Account Aggregator | 
    | Consent Status Request | Lender | LA | Invoked by Lender to get consent handle status from LA | 
    | Consent Status Response | LA | Lender | Invoked by LA to send consent status to Lender | 

    ## Offers APIs
    | API Name | Caller | Callee | Description | 
    | ---- | ---- | ---- | ---- | 
    |Generate Offers Request | LA | Lender | The LA sends this request to the lender to get the list of offers that the lender is willing to provide for the loan applications already shared. | 
    | Generate Offers Response | Lender | LA | This API is invoked by the lender informing the borrower regarding the various loan offers that have been generated corresponding to each of the loan applications. This is a bulk API, where multiple loan offers can be sent to the borrower in one shot. | 
    | Set Offer Request | LA | Lender | This API is invoked by the LA to inform the lender about the offer that the borrower has chosen for a particular loan application. | 
    | Set Offer Response | Lender | LA | This API is invoked by the lender and is the asynchronous response to Set Offer Request API. | 

    ## KYC APIs
    | API Name | Caller | Callee | Description | 
    | ---- | ---- | ---- | ---- | 
    | Trigger KYC Request | LA | Lender | Request by LA to initiate the KYC process of the borrower after successfully accepting the final offer. (OKYC if applicable and Udyam) | 
    | Trigger KYC Response | Lender | LA | Response sent by Lender with the url for KYC details submission.  | 
    | KYC Status Request | LA | Lender | Request sent by LA to get the KYC status. This API will be triggered just after the user completes the KYC process. The lender is supposed to provide a reference number in the first call. This method can be called later to know the status of KYC. | 
    | KYC Status Response | Lender | LA | This API is called by the lender to inform the status of the KYC process. Lender is also supposed to inform the LA about the action required for | completing the KYC. | 

    ## Loan Acceptance APIs
    | API Name | Caller | Callee | Description | 
    | ---- | ---- | ---- | ---- | 
    | Loan Agreement Request | LA | Lender | Request sent by LA to lender to initiate the loan acceptance steps beginning with asking for the loan agreement |
    | Loan Agreement Response | Lender | LA | Response given by the lender with the loan agreement for the borrower | 
    | Trigger Loan Acceptance Request | LA | Lender | Request sent by LA to lender to send an OTP to phone number associated with verified by individual KYC | 
    | Trigger Loan Acceptance Response | Lender | LA | Response given by the lender for TriggerOTPRequest | 
    | Verify Loan Acceptance Request | LA | Lender | This API is invoked by the LA when the user enters the OTP received on the mobile number and agrees to the terms of the agreement. The asynchronous response for this API should include the lender acknowledging the receipt of OTP and verifying if the user has entered the correct OTP that was shared by the lender. | 
    | Verify Loan Acceptance Response | Lender | LA | This API is invoked by the Lender  when the OTP entered by the user is shared through the LA. This API acknowledges the receipt of OTP and verifies if the user has entered the correct OTP that was shared by the lender on the mobile number associated with the disbursement account. | 

    ## Repayment Plan APIs
    | API Name | Caller | Callee | Description | 
    | ---- | ---- | ---- | ---- | 
    | Set Repayment Plan Request | LA | Lender | This API is invoked by the LA to inform the lender system about the details of the repayment plan that will be used by the borrower. | 
    | Set Repayment Plan Response | Lender | LA | This API is invoked by the lender to the LA giving the payment url where he can enter details of repayment. | 
    | Set Repayment Plan Status Request | LA | Lender | This API is used by LA to check the status of a previously initiated set repayment plan request. This API is called once the payment page of the lender is loaded and the borrower choses a repayment method associated with the chosen repayment plan. | 
    | Set Repayment Plan Status Response | Lender | LA | This API is used by lenders to inform LA about the status of a previously initiated set Repayment.The API returns the status of the repayment plan that the borrower has chosen. In case, the borrower has chosen e-mandate as the repayment method in payment page url, the status of the repayment plan becomes ACTIVE only after successful authorization of the e-mandate on the PSP by the borrower. | 
    | Confirm Repayment Request | Lender | LA | This API is used by lenders to inform LA about the status of a repayment handled directly by the lender (Triggered on Lender side - Payment on the branch or auto E-Mandate repayment). |

    ## Grant Loan APIs
    | API Name | Caller | Callee | Description | 
    | ---- | ---- | ---- | ---- | 
    | Grant Loan Request | LA | Lender | This API is invoked by the LA once the borrower completes successful signing of the loan agreement to create the actual loan in the lender’s system. | 
    | Grant Loan Response | Lender | LA | This method is called be the Lender when the Grant Loan processing is completed. This informs the borrower about the status of the loan in the lender system. Upon successful creation of a loan in the system, the lender returns all the details of the loan. | 

    ## Disbursement APIs
    | API Name | Caller | Callee | Description | 
    | ---- | ---- | ---- | ---- | 
    | Set Disbursement Account Request | LA | Lender | This API is invoked by the LA to inform the lender about the disbursement account that the borrower has chosen. | 
    | Set Disbursement Account Response | Lender | LA | This API is invoked by the lender to inform the LA regarding whether the lender has successfully set the disbursement account which was sent in SetDisbursementAccountRequest. |
    | Trigger Disbursement Request | LA | Lender | This API is to be used when the borrower wants the money to be disbursed immediately. |
    | Trigger Disbursement Response | Lender | LA | Response given by the lender for TriggerDisbursement |
    | Trigger Disbursement Status Request | LA | Lender | This API is to be used by LA to check the status of a previously initiated disbursement request. |
    | Trigger Disbursement Status Response | Lender | LA | Response given by lender for  a trigger Disbursement Status Request. |

    ## Trigger Repayment APIs
    | API Name | Caller | Callee | Description | 
    | ---- | ---- | ---- | ---- | 
    | Trigger Repayment Request | LA | Lender | This API is invoked by the LA to inform the lender to trigger a repayment. This API will not be called when payment is routed to lender via collection agent. | 
    | Trigger Repayment Response | Lender | LA | This API is invoked by the lender to the LA giving the lender payment page url from where the borrower can make the payment. Lender also generates an id for the payment which becomes the reference for LA to check the status of repayment. | 
    | Trigger Repayment Status Request | LA | Lender | This API is used by LA to check the status of a previously initiated repayment transaction. In the case where collection is handled by Collection Management System (CMS), once the LA receives payment confirmation (including transaction reference number) from the Collection Management System, LA will send a request to the lender to check if a payment has been credited against the transaction Reference Number. | 
    | Trigger Repayment Status Response | Lender | LA | This API is used by LA to check the status of a previously initiated repayment transaction. In the case where collection is handled by Collection Management System (CMS), once the LA receives payment confirmation (including transaction reference number) from the Collection Management System, LA will send a request to the lender to check if a payment has been credited against the transaction Reference Number. | 

    ## Loan Details APIs
    | API Name | Caller | Callee | Description | 
    | ---- | ---- | ---- | ---- | 
    | Get Loan Request | LA | Lender | This API is invoked by the LA when the LA wants to get the details of the loan. | 
    | Get Loan Response | Lender | LA | This method is called by the Lender and it returns all the details of the loan. | 
    | Loan Summary Request | LA | Lender | Request raised by the LA to get the current summary of the loan | 
    | Loan Summary Response | Lender | LA | Response given by lender for LoanSummary Request | 
    | Loan Statement Request | LA | Lender | Request raised for getting the current loan account statement | 
    | Loan Statement Response | Lender | LA | Response giving the Loan account statement | 
    | List Loans Request | LA | Lender | This API is invoked by LA to get the list of loans given by lender for a borrower | 
    | List Loans Response | Lender | LA | This API gives get the list of loans given by lender for a borrower | 

    ## Dispute APIs
    | API Name | Caller | Callee | Description | 
    | ---- | ---- | ---- | ---- | 
    | Raise Dispute Request | LA | Lender | Request raised by LA to create a dispute in lender system |
    | Raise Dispute Response | Lender | LA | Response given to LA by lender post RaiseDisputeRequest |
    | Dispute Status Request | LA | Lender | This API is invoked by the LA to get the status of a dispute |
    | Dispute Status Response | Lender | LA | This API is invoked by the Lender to send the status of a dispute |

    ## Analytics APIs
    | API Name | Caller | Callee | Description | 
    | ---- | ---- | ---- | ---- | 
    | Analytics Heartbeat Push Request | All | OCEN 4.0 Auth Service | This API is used by participants to indicate healthy status of their service. |
    | Analytics Metrics Push Request | All | OCEN 4.0 Auth Service | This API is used by participants to send metrics for analytics. |

    ## Derived Data Provider APIs
    | API Name | Caller | Callee | Description | 
    | ---- | ---- | ---- | ---- | 
    | Register Derived Data Provider Schema | Derived Data Provider | Product Registry | This API is used by the Dervied Data Provider to register the schema with the Product Registry. Once registered, Lenders will be able to lookup the schema from the Product Regitsry and fetch data from the Derived Data Provider to underwrite the loan. |
    | Get Schema by Derived Data Provider ID | Lender | Product Registry | This API is used by the Lender to lookup all schemas supported by a data provider. |
    | Get Schema by Schema ID | Lender | Product Registry | This API is used by the Lender to lookup schema supported by a data provider using the schema ID. |
    | Delete Schema by Schema ID | Derived Data Provider | Product Registry | This API is used by the Derived Data Provider to delete a registered schema from the Product Registr12y. |

    # API Details
externalDocs:
  description: Find out how to create a GitHub repo for your OpenAPI definition.
  url: https://github.com/iSPIRT/OCEN-Specs
paths:
  /v4.0.0alpha/loanApplications/createLoanRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Create Loan Applications Request
      summary: Create Loan Applications Request
      description: Create Loan applications endpoint available on Lender to be used by LA
      operationId: CreateLoanApplicationsRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
              properties:
                metaData:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                loanApplications:
                  type: array
                  items:
                    $ref: "#/components/schemas/LoanApplicationRequest"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/loanApplications/createLoanResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Create Loan Applications Response
      summary: Create Loan Applications Response
      description: This is the response for Create Loan Applications but invoked by the lender. No offers are rolled out as part of this API. If the lender system finds preliminary information sufficient for doing the loan processing, it will send “PROCESSING” as the status. Otherwise, it can reject the application citing a reason for the same.
      operationId: createLoanApplicationsResponse
      requestBody:
        description: Response by lender to LA for create bulk loan application request
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - response
                - requestId
                - loanApplications
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                response:
                  $ref: "#/components/schemas/Response"
                requestId:
                  type: string
                  description: UUID used to tie request and response and for idempotency
                loanApplications:
                  type: array
                  description: Array of LoanApplications
                  items:
                    $ref: "#/components/schemas/LoanApplication"
      responses:
        "200":
          description: Acknowledgement of Response Received
          content:
            application/json:
              schema:
                type: object
                required:
                  - ack
                properties:
                  ack:
                    $ref: "#/components/schemas/Ack"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /v4.0.0alpha/consent/consentHandleRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Consent LA to Lender
      summary: Consent Handle Request
      description: Create consent handle with Account Aggregator | This API is used to request the lenders to send a consent request for fetching the bank account statements, GST historical data. <br> The lender (FIU) checks with the AA and creates a consent handle internally once this API is triggered
      requestBody:
        description: Request by LA to lender to get consent handle with Account Aggregator
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsentHandleRequest"
      responses:
        "200":
          description: Acknowledgement by Lender to LA for Consent Handle Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/consent/consentHandleResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Consent Lender to LA
      summary: Consent Handle Response
      description: Invoked by lender to send consent handle created in Account Aggregator
      requestBody:
        description: Consent Handle Response
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsentHandleResponse"
      responses:
        "200":
          description: Acknowledgement to consent Hanlde Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/ba/onConsentHandle:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Lender shares consent handle to LA
      summary: Provide Consent Handle for a loan application
      description: |
        Invoked by lender on LA to send consent handle created with Account Aggregator  for loan applications processing
      requestBody:
        description: Consent Handle created with AA
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsentHandle"
      responses:
        "200":
          description: Acknowledgement for the consent Handle
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/lender/consent/notify:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Consent journey state notification LA to Gateway
      summary: Share the consent journey status
      description: Invoked by LA to inform Lenders of the consent journey state once the customer has interacted with Account Aggregator
      requestBody:
        description: Consent State update request
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ConsentNotificationRequest"
      responses:
        "200":
          description: Acknowledgement to consent handle Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/ba/consentStatusRequest:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Lender queries Consent handle status on LA
      summary: Consent Status Request
      description: Invoked by Lender to get consent handle status from LA
      requestBody:
        description: Consent Status Request
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsentStatusRequest"
      responses:
        "200":
          description: Acknowledgement to consent status request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/lender/consentStatusResponse:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - LA responds with consent status to lender
      summary: Consent Status Response
      description: Invoked by LA to send consent status to Lender
      requestBody:
        description: Consent Status Response
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConsentStatusResponse"
      responses:
        "200":
          description: Acknowledgement to consent status response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/offers/generateOffersRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Generate Offers Request
      summary: Generate Offers Request
      description: The LA sends this request to the lender to get the list of offers that the lender is willing to provide for the loan applications already shared.
      operationId: GenerateOffersRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - loanApplicationIds
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                loanApplicationIds:
                  type: array
                  items:
                    type: string
                    examples:
                      - t8cc6822bd4bbb4eb1b9e1b4996fbff8acb
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/offers/generateOffersResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Generate Offers Response
      summary: Generate Offers Response
      description: This API is invoked by the lender informing the borrower regarding the various loan offers that have been generated corresponding to each of the loan applications. This is a bulk API, where multiple loan offers can be sent to the borrower in one shot.
      operationId: GenerateOffersResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - response
                - requestId
                - loanApplications
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                response:
                  $ref: "#/components/schemas/Response"
                requestId:
                  type: string
                loanApplications:
                  type: array
                  items:
                    $ref: "#/components/schemas/LoanApplicationWithOffer"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/offers/setOffersRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Set Offer Request
      summary: Set Offers Request
      description: This API is invoked by the LA to inform the lender about the offer that the borrower has chosen for a particular loan application.
      operationId: SetOffersRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - loanApplicationId
                - offer
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                loanApplicationId:
                  type: string
                offer:
                  $ref: "#/components/schemas/Offer"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/offers/setOffersResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Set Offers Response
      summary: Set Offers Response
      description: This API is invoked by the lender and is the asynchronous response to Set Offer Request API.
      operationId: SetOffersResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - response
                - requestId
                - loanApplicationId
                - loanApplicationStatus
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                response:
                  $ref: "#/components/schemas/Response"
                requestId:
                  type: string
                loanApplicationId:
                  type: string
                offer:
                  type: object
                  properties:
                    type: string
                    enum:
                      - OFFER_ACCEPTED
                      - OFFERED
                      - GRANTED
                      - REJECTED
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/offers/triggerKycRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - KYC LA to Lender
      summary: Trigger KYC Request
      description: This  API is called by LA to initiate the KYC process of the borrower after successfully accepting the final offer. The lender is supposed to return the url, where the borrower will be completing the KYC process.
      operationId: TriggerKYCRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - loanApplicationId
                - kyc
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                loanApplicationId:
                  type: string
                  examples:
                    - t8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                kyc:
                  type: object
                  properties:
                    individualKYC:
                      $ref: "#/components/schemas/KYCDetails"
                    entityKYC:
                      $ref: "#/components/schemas/KYCDetails"
                    extensibleData:
                      $ref: "#/components/schemas/ExtensibleData"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/offers/triggerKycResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - KYC Lender to LA
      summary: Trigger KYC Response
      description: This API is called by the lender in response to trigger KYC requests. The lender returns the url for KYC details submission. The KYC process will be carried out on the lender server.
      operationId: TriggerKYCResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - response
                - requestId
                - loanApplicationId
                - kyc
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                response:
                  $ref: "#/components/schemas/Response"
                requestId:
                  type: string
                loanApplicationId:
                  type: string
                  examples:
                    - t8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                kyc:
                  type: object
                  properties:
                    kycRefNo:
                      type: string
                    individualKYC:
                      $ref: "#/components/schemas/KYCDetails"
                    entityKYC:
                      $ref: "#/components/schemas/KYCDetails"
                    extensibleData:
                      $ref: "#/components/schemas/ExtensibleData"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/offers/kycStatusRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - KYC LA to Lender
      summary: KYC Status Request
      description: This API is called by LA to get the KYC status. This API will be triggered just after the user completes the KYC process.
      operationId: KYCStatusRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - loanApplicationId
                - kyc
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                loanApplicationId:
                  type: string
                kyc:
                  type: object
                  properties:
                    kycRefNo:
                      type: string
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/offers/kycStatusResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - KYC Lender to LA
      summary: KYC Status Response
      description: This API is called by the lender to inform the status of the KYC process. Lender is also supposed to inform the LA about the action required for completing the KYC.
      operationId: KYCStatusResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - loanApplicationId
                - kyc
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                loanApplicationId:
                  type: string
                response:
                  $ref: "#/components/schemas/Response"
                kyc:
                  type: object
                  properties:
                    kycRefNo:
                      type: string
                    verificationStatus:
                      type: string
                      enum:
                        - SUCCESS
                        - REJECTED
                        - PENDING
                        - ACTION_REQUIRED
                    individualKYC:
                      $ref: "#/components/schemas/KYCDetails"
                    entityKYC:
                      $ref: "#/components/schemas/KYCDetails"
                    extensibleData:
                      $ref: "#/components/schemas/ExtensibleData"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/loanAcceptance/triggerLoanAcceptanceRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Loan Acceptance LA to Lender
      summary: Trigger Loan Acceptance Request
      description: SMS Format for the OTP [#] {6Digit OTP} is the One Time Password (OTP) to complete the loan process with {Lender Name}. {appToken} >- Eg- 467866 is the One Time Password (OTP) to complete the loan process with ABC Bank. \#0aBCD7DMr7s >- This API is invoked by the LA when the user agrees to the terms of the agreement.The Asynchronous response for this API should include the lender sending an OTP to the borrower’s phone number
      operationId: triggerLoanAcceptanceRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - loanApplicationIds
                - credBlock
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                loanApplicationIds:
                  type: array
                  items:
                    type: string
                credBlock:
                  type: object
                  properties:
                    type:
                      type: string
                      enum:
                        - OTP
                    data:
                      type: object
                      properties:
                        appToken:
                          type: string
                          examples:
                            - <token for auto-reading otp>
                    extensibleData:
                      $ref: "#/components/schemas/ExtensibleData"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/loanAcceptance/triggerLoanAcceptanceResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Loan Acceptance Lender to LA
      summary: Trigger Loan Acceptance Response
      description: SMS Format for the OTP [#] {6Digit OTP} is the One Time Password (OTP) to complete the loan process with {Lender Name}. {appToken} >- Eg- 467866 is the One Time Password (OTP) to complete the loan process with ABC Bank. \#0aBCD7DMr7s >- This API is invoked by the Lender when the Lender triggers the credential verification process from the borrower.
      operationId: triggerLoanAcceptanceResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - response
                - credBlock
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                response:
                  $ref: "#/components/schemas/Response"
                loanApplicationIds:
                  type: array
                  items:
                    type: string
                credBlock:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        otpSessionKey:
                          type: string
                        maskedPhoneNumber:
                          type: string
                          examples:
                            - XXXXXXX775
                    extensibleData:
                      $ref: "#/components/schemas/ExtensibleData"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/loanAcceptance/verifyLoanAcceptanceRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Loan Acceptance LA to Lender
      summary: Verify Loan Acceptance Request
      description: This API is invoked by the LA when the user enters the OTP received on the mobile number and agrees to the terms of the agreement. The asynchronous response for this API should include the lender acknowledging the receipt of OTP and verifying if the user has entered the correct OTP that was shared by the lender.
      operationId: verifyLoanAcceptanceRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - credBlock
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                loanApplicationIds:
                  type: array
                  items:
                    type: string
                credBlock:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        otpSessionKey:
                          type: string
                        otp:
                          type: number
                          examples:
                            - "856429"
                    extensibleData:
                      $ref: "#/components/schemas/ExtensibleData"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/loanAcceptance/verifyLoanAcceptanceResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Loan Acceptance Lender to LA
      summary: Verify Loan Acceptance Response
      description: This API is invoked by the Lender  when the OTP entered by the user is shared through the LA. This API acknowledges the receipt of OTP and verifies if the user has entered the correct OTP that was shared by the lender on the mobile number associated with the disbursement account.
      operationId: verifyLoanAcceptanceResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - credBlock
                - response
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                response:
                  $ref: "#/components/schemas/Response"
                loanApplicationIds:
                  type: array
                  items:
                    type: string
                credBlock:
                  type: object
                  properties:
                    data:
                      type: object
                      properties:
                        otpSessionKey:
                          type: string
                        status:
                          type: string
                          enum:
                            - SUCCESS
                            - INVALID_SESSION
                            - INCORRECT_OTP
                    extensibleData:
                      $ref: "#/components/schemas/ExtensibleData"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/loanAcceptance/loanAgreementRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Loan Acceptance LA to Lender
      summary: Loan Agreement Request
      description: Loan agreement request
      operationId: loanAgreementRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - loanApplicationIds
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                loanApplicationIds:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/loanAcceptance/LoanAgreementResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Loan Acceptance Lender to LA
      summary: Loan Agreement Response
      description: Loan agreement Response
      operationId: loanAgreementResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - loanApplicationIds
                - response
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                response:
                  $ref: "#/components/schemas/Response"
                requestId:
                  type: string
                loanApplicationIds:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/disbursement/setRepaymentPlanRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Set Repayment LA to Lender
      summary: Set Repayment Plan Request
      description: This API is invoked by the LA to inform the lender system about the details of the repayment plan that will be used by the borrower.
      operationId: setRepaymentPlanRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - loanApplicationId
                - requestId
                - plan
                - paymentMethod
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                loanApplicationId:
                  type: string
                loanId:
                  type: string
                requestId:
                  type: string
                plan:
                  $ref: "#/components/schemas/PaymentPlan"
                paymentMethod:
                  $ref: "#/components/schemas/PaymentMethod"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/disbursement/setRepaymentPlanResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Set Repayment Lender to LA
      summary: Set Repayment Plan Response
      description: This API is invoked by the lender to the LA giving the payment url where he can enter details of repayment.
      operationId: setRepaymentPlanResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - loanApplicationId
                - response
                - requestId
                - useCollectionSupport
                - plan
                - paymentMethod
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                response:
                  $ref: "#/components/schemas/Response"
                loanApplicationId:
                  type: string
                loanId:
                  type: string
                requestId:
                  type: string
                plan:
                  $ref: "#/components/schemas/PaymentPlan"
                paymentMethod:
                  $ref: "#/components/schemas/PaymentMethod"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/disbursement/setRepaymentPlanStatusRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Set Repayment LA to Lender
      summary: Set Repayment Plan Status Request
      description: This API is used by LA to check the status of a previously initiated set repayment plan request. This API is called once the payment page of the lender is loaded and the borrower choses a repayment method associated with the chosen repayment plan.
      operationId: setRepaymentPlanStatusRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - plan
                - loanId
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                plan:
                  $ref: "#/components/schemas/PaymentPlan"
                paymentMethod:
                  $ref: "#/components/schemas/PaymentMethod"
                loanId:
                  type: string
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/disbursement/setRepaymentPlanStatusResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Set Repayment Lender to LA
      summary: Set Repayment Plan Status Response / Webhook
      description: This API is used by lenders to inform LA about the status of a previously initiated set Repayment.The API returns the status of the repayment plan that the borrower has chosen. In case, the borrower has chosen e-mandate as the repayment method in payment page url, the status of the repayment plan becomes ACTIVE only after successful authorization of the e-mandate on the PSP by the borrower.
      operationId: setRepaymentPlanStatusResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - response
                - requestId
                - plan
                - loanId
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                response:
                  $ref: "#/components/schemas/Response"
                loanId:
                  type: string
                requestId:
                  type: string
                plan:
                  $ref: "#/components/schemas/PaymentPlan"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/grantLoan/grantLoanRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Grant Loan LA to Lender
      summary: Grant Loan Request
      description: This API is invoked by the LA once the borrower completes successful signing of the loan agreement to create the actual loan in the lender’s system.
      operationId: grantLoanRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - loanApplicationId
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                loanApplicationId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/grantLoan/grantLoanResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Grant Loan Lender to LA
      summary: Grant Loan Response
      description: This method is called be the Lender when the Grant Loan processing is completed. This informs the borrower about the status of the loan in the lender system. Upon successful creation of a loan in the system, the lender returns all the details of the loan.
      operationId: grantLoanResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - response
                - loanDetails
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                response:
                  $ref: "#/components/schemas/Response"
                loanDetails:
                  type: object
                  loanId:
                    type: string
                  loanApplicationId:
                    type: string
                  loanStatus:
                    type: string
                    enum:
                      - GRANTED
                      - REJECTED
                      - ACTIVE
                      - DEFAULTED
                      - OVERDUE
                      - ACTION_REQUIRED
                  createdDate:
                    type: string
                  startDate:
                    type: string
                  endDate:
                    type: string
                  productId:
                    type: string
                  borrower:
                    $ref: ../../components/schemas/Borrower.yaml
                  documents:
                    type: array
                    $ref: ../../components/schemas/Document.yaml
                  guarantors:
                    type: array
                    $ref: ../../components/schemas/Guarantor.yaml
                  applications:
                    type: array
                    $ref: ../../components/schemas/Applicant.yaml
                  terms:
                    $ref: ../../components/schemas/LoanTerms.yaml
                  disbursement:
                    $ref: ../../components/schemas/Disbursement.yaml
                  repayment:
                    $ref: ../../components/schemas/Repayment.yaml
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/disbursement/setDisbursementAccountRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Disbursement LA to Lender
      summary: Set Disbursement Account Request
      description: This API is invoked by the LA to inform the lender about the disbursement account that the borrower has chosen.
      operationId: setDisbursementAccountRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - loanApplicationId
                - account
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                loanApplicationId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                loanId:
                  type: string
                account:
                  $ref: "#/components/schemas/AccountDetails"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/disbursement/setDisbursementAccountResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Disbursement Lender to LA
      summary: Set Disbursement Account Response
      description: This API is invoked by the lender to inform the LA regarding whether the lender has successfully set the disbursement account which was sent in SetDisbursementAccountRequest.
      operationId: setDisbursementAccountResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - loanApplicationId
                - account
                - response
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                loanApplicationId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                loanId:
                  type: string
                response:
                  $ref: "#/components/schemas/Response"
                account:
                  $ref: "#/components/schemas/AccountDetails"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/disbursement/triggerDisbursementRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Disbursement LA to Lender
      summary: Trigger Disbursement Request
      description: This API is to be used when the borrower wants the money to be disbursed immediately.
      operationId: triggerDisbursementRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - loanId
                - requestId
                - payment
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                loanId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                requestId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                payment:
                  type: object
                  properties:
                    amount:
                      type: number
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/disbursement/triggerDisbursementResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Disbursement Lender to LA
      summary: Trigger Disbursement Response
      description: This API is to be used when the borrower wants the money to be disbursed immediately.
      operationId: triggerDisbursementResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - loanId
                - requestId
                - payment
                - response
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                loanId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                requestId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                response:
                  $ref: "#/components/schemas/Response"
                payment:
                  type: object
                  properties:
                    id:
                      type: string
                      examples:
                        - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                    amount:
                      type: string
                    date:
                      type: string
                    status:
                      type: string
                      enum:
                        - SUCCESS
                        - FAILURE
                        - PENDING_AUTH
                    installmentNumber:
                      type: string
                    txnRefNo:
                      type: string
                      examples:
                        - 4618602124
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/disbursement/triggerDisbursementStatusRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Disbursement LA to Lender
      summary: Trigger Disbursement Status Request
      description: This API is to be used by LA to check the status of a previously initiated disbursement request.
      operationId: triggerDisbursementStatusRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - loanId
                - requestId
                - payment
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                loanId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                requestId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                payment:
                  type: object
                  properties:
                    id:
                      type: string
                      examples:
                        - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/disbursement/triggerDisbursementStatusResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Disbursement Lender to LA
      summary: Trigger Disbursement Status Response
      description: This API is the response given by lender for  a trigger Disbursement Status Request.
      operationId: triggerDisbursementStatusResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - loanId
                - requestId
                - payment
                - response
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                loanId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                requestId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                response:
                  $ref: "#/components/schemas/Response"
                payment:
                  type: object
                  properties:
                    id:
                      type: string
                      examples:
                        - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                    amount:
                      type: string
                    date:
                      type: string
                    status:
                      type: string
                      enum:
                        - SUCCESS
                        - FAILURE
                        - PENDING_AUTH
                    installmentNumber:
                      type: string
                    txnRefNo:
                      type: string
                      examples:
                        - 4618602124
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/repayment/triggerRepaymentRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Trigger Repayment LA to Lender
      summary: Trigger Repayment Request
      description: This API is invoked by the LA to inform the lender to trigger a repayment. This API will not be called when payment is routed to lender via collection agent.
      operationId: triggerRepaymentRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - payment
                - loanId
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                payment:
                  $ref: "#/components/schemas/Payment"
                loanId:
                  type: string
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/repayment/triggerRepaymentResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Trigger Repayment Lender to LA
      summary: Trigger Repayment Response
      description: This API is invoked by the lender to the LA giving the lender payment page url from where the borrower can make the payment. Lender also generates an id for the payment which becomes the reference for LA to check the status of repayment.
      operationId: triggerRepaymentResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - payment
                - response
                - loanId
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                response:
                  $ref: "#/components/schemas/Response"
                payment:
                  $ref: "#/components/schemas/Payment"
                loanId:
                  type: string
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/repayment/triggerRepaymentStatusRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Trigger Repayment LA to Lender
      summary: Trigger Repayment Status Request
      description: This API is used by LA to check the status of a previously initiated repayment transaction. In the case where collection is handled by Collection Management System (CMS), once the LA receives payment confirmation (including transaction reference number) from the Collection Management System, LA will send a request to the lender to check if a payment has been credited against the transaction Reference Number.
      operationId: triggerRepaymentStatusRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - payment
                - loanId
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                payment:
                  $ref: "#/components/schemas/Payment"
                loanId:
                  type: string
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/repayment/triggerRepaymentStatusResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Trigger Repayment Lender to LA
      summary: Trigger Repayment Status Request
      description: This API is used by LA to check the status of a previously initiated repayment transaction. In the case where collection is handled by Collection Management System (CMS), once the LA receives payment confirmation (including transaction reference number) from the Collection Management System, LA will send a request to the lender to check if a payment has been credited against the transaction Reference Number.
      operationId: triggerRepaymentStatusRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - payment
                - response
                - loanId
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                payment:
                  $ref: "#/components/schemas/Payment"
                response:
                  $ref: "#/components/schemas/Response"
                loanId:
                  type: string
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/repayment/confirmRepaymentRequest:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Set Repayment Lender to LA
      summary: Confirm Repayment Request
      description: This API is used by lenders to inform LA about the status of a repayment handled directly by the lender (Triggered on Lender side - Payment on the branch or auto E-Mandate repayment).
      operationId: confirmRepaymentRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - response
                - payment
                - loanId
                - paymentMethod
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                payment:
                  $ref: "#/components/schemas/Payment"
                paymentMethod:
                  $ref: "#/components/schemas/PaymentMethod"
                response:
                  $ref: "#/components/schemas/Response"
                loanId:
                  type: string
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/loanDetails/getloanRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Loan Details LA to Lender
      summary: Get Loan Request
      description: This API is invoked by the LA when the LA wants to get the details of the loan.
      operationId: getLoanRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - loanApplicationId
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                loanApplicationId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/loanDetails/getloanResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Loan Details Lender to LA
      summary: Get Loan Response
      description: This method is called by the Lender and it returns all the details of the loan.
      operationId: getLoanResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - response
                - requestId
                - loanId
                - lenderAccount
                - loanStatus
                - createdDate
                - startDate
                - endDate
                - summary
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                response:
                  $ref: "#/components/schemas/Response"
                requestId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                loanId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                lenderAccount:
                  type: object
                  required:
                    - accountDataType
                    - data
                loanStatus:
                  type: string
                  enum:
                    - GRANTED
                    - REJECTED
                    - ACTIVE
                    - DEFAULTED
                    - OVERDUE
                    - ACTION_REQUIRED
                createdDate:
                  type: string
                startDate:
                  type: string
                endDate:
                  type: string
                summary:
                  type: object
                  required:
                    - nextRepayment
                    - currentRepayment
                    - principalPaid
                    - interestPaid
                    - penaltyPaid
                    - principalPending
                    - interestPending
                    - amountDisbursed
                    - amountRepaid
                    - tenure
                    - description
                  properties:
                    nextRepayment:
                      $ref: "#/components/schemas/Payment"
                    currentRepayment:
                      $ref: "#/components/schemas/Payment"
                    principalPaid:
                      type: string
                    interestPaid:
                      type: string
                    penaltyPaid:
                      type: string
                    principalPending:
                      type: string
                    interestPending:
                      type: string
                    amountDisbursed:
                      type: string
                    amountRepaid:
                      type: string
                    tenure:
                      $ref: "#/components/schemas/LoanTenure"
                    description:
                      type: string
                      examples:
                        - short description for the loan
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/loanDetails/listloansRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Loan Details LA to Lender
      summary: List Loans Request
      description: This API is invoked by the LA when the LA wants to get the details of the loan.
      operationId: getLoanRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - borrower
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                borrower:
                  $ref: "#/components/schemas/Borrower"
                collateral:
                  $ref: "#/components/schemas/Collateral"
                startDate:
                  type: string
                endDate:
                  type: string
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/loanDetails/listLoansResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Loan Details Lender to LA
      summary: List Loans Request
      description: This API is invoked by the LA when the LA wants to get the details of the loan.
      operationId: getLoanRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - response
                - loans
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                  default: ""
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                response:
                  type: object
                  required:
                    - error
                  properties:
                    error:
                      type: string
                      default: ""
                      examples:
                        - "0"
                loans:
                  type: array
                  items:
                    type: object
                    required:
                      - loanId
                      - terms
                    properties:
                      loanId:
                        type: string
                        examples:
                          - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                      terms:
                        $ref: "#/components/schemas/LoanTerms"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/loanDetails/loanStatementRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Loan Details LA to Lender
      summary: Loan Statement Request
      description: This method is called by the LA to get the account statement for the loan for a specified period. If the start and end dates are blank, it will return the entire Loan Statement.
      operationId: loanStatementRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - loanId
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                loanId:
                  type: string
                startDate:
                  type: string
                endDate:
                  type: string
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/loanDetails/loanStatementResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Loan Details Lender to LA
      summary: Loan Statement Request
      description: This method is called by the LA to get the account statement for the loan for a specified period. If the start and end dates are blank, it will return the entire Loan Statement.
      operationId: loanStatementRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - response
                - requestId
                - loanId
                - accountStatement
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                response:
                  $ref: "#/components/schemas/Response"
                requestId:
                  type: string
                loanId:
                  type: string
                accountStatement:
                  type: array
                  items:
                    $ref: "#/components/schemas/Transaction"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/loanDetails/loanStatementSummaryRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Loan Details LA to Lender
      summary: Loan Summary Request
      description: This API is invoked by the LA to get the summary of the loan as of the current date.
      operationId: loanSummaryRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - loanApplicationId
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                loanApplicationId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/loanDetails/loanStatementSummaryResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Loan Details Lender to LA
      summary: Loan Summary Response
      description: This API is invoked by the LA once the borrower completes successful signing of the loan agreement to create the actual loan in the lender’s system.
      operationId: loanSummaryResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - response
                - requestId
                - loanId
                - lenderAccount
                - loanStatus
                - createdDate
                - startDate
                - endDate
                - summary
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                response:
                  $ref: "#/components/schemas/Response"
                requestId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                loanId:
                  type: string
                  examples:
                    - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
                lenderAccount:
                  type: object
                  required:
                    - accountDataType
                    - data
                loanStatus:
                  type: string
                  enum:
                    - GRANTED
                    - REJECTED
                    - ACTIVE
                    - DEFAULTED
                    - OVERDUE
                    - ACTION_REQUIRED
                createdDate:
                  type: string
                startDate:
                  type: string
                endDate:
                  type: string
                summary:
                  type: object
                  required:
                    - nextRepayment
                    - currentRepayment
                    - principalPaid
                    - interestPaid
                    - penaltyPaid
                    - principalPending
                    - interestPending
                    - amountDisbursed
                    - amountRepaid
                    - tenure
                    - description
                  properties:
                    nextRepayment:
                      $ref: "#/components/schemas/Payment"
                    currentRepayment:
                      $ref: "#/components/schemas/Payment"
                    principalPaid:
                      type: string
                    interestPaid:
                      type: string
                    penaltyPaid:
                      type: string
                    principalPending:
                      type: string
                    interestPending:
                      type: string
                    amountDisbursed:
                      type: string
                    amountRepaid:
                      type: string
                    tenure:
                      $ref: "#/components/schemas/LoanTenure"
                    description:
                      type: string
                      examples:
                        - short description for the loan
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v1/metrics/report:
    post:
      tags:
        - Metrics API
      summary: Metrics update push request
      description: Invoked by OCEN participant to update the central OCEN Analytics service for better network observability
      operationId: AnalyticsMetricsPushRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - metrics
              properties:
                metaData:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                metrics:
                  $ref: "#/components/schemas/AnalyticsMetrics"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v1/heartbeat/event:
    post:
      tags:
        - Heartbeat API
      summary: Heartbeat event push request
      description: Heartbeat event Invoked by OCEN participant for a loan application
      operationId: AnalyticsHeartbeatPushRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - event
              properties:
                metaData:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                event:
                  $ref: "#/components/schemas/AnalyticsEvent"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /derivedDataProvider/schema:
    post:
      tags:
        - Data Provider
      summary: Register schema
      operationId: registerDPSchema
      parameters:
        - $ref: "#/components/parameters/Signature"
      requestBody:
        description: Schema registration endpoint for Dervied Data Provider
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/DPRegisterSchemaRequest"
      responses:
        "200":
          description: lookup result
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DPSchemaAddDeleteResponse"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /derivedDataProvider/schema/byDataProvider/{id}:
    get:
      tags:
        - Data Provider
      summary: Get schemas supported by derived data provider id
      operationId: getDPSchemas
      parameters:
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/DataProviderId"
      responses:
        "200":
          description: schemas supported by data provider
          content:
            application/json:
              schema:
                type: object
                properties:
                  dataProviderId:
                    type: string
                    format: uuid
                    example: 5ebd671b-762c-49b0-99ce-65642b113d7b
                  schemas:
                    type: array
                    items:
                      $ref: "#/components/schemas/RegisteredDPSchema"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /derivedDataProvider/schema/{schemaId}:
    get:
      tags:
        - Data Provider
      summary: Get schema by schema id
      operationId: getSchema
      parameters:
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/SchemaId"
      responses:
        "200":
          description: schema
          content:
            application/json:
              schema:
                type: object
                properties:
                  schemas:
                    type: array
                    items:
                      $ref: "#/components/schemas/RegisteredDPSchema"
        "400":
          description: Bad Request
        "404":
          description: Not Found
    delete:
      tags:
        - Data Provider
      summary: Delete schema by schema id
      operationId: deleteSchema
      parameters:
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/SchemaId"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DPSchemaAddDeleteResponse"
        "400":
          description: Bad Request
        "404":
          description: Not Found
  /networks:
    post:
      operationId: createNetwork
      tags:
        - NetworkAPIs
      description: This API is network create API.
      requestBody:
        description: This will be called from console to create network
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
              properties:
                name:
                  type: string
                  format: Alphanumeric
                  maxLength: 35
                  description: Name of network
                description:
                  type: string
                  format: Alphanumeric
                  maxLength: 35
                  description: Description of prodnetworkuct.
      responses:
        "200":
          description: Acknowledgement of network creation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Network"
        "400":
          description: Invalid request
        "404":
          description: Not found
    get:
      operationId: listNetwork
      tags:
        - NetworkAPIs
      description: This API is network create API.
      responses:
        "200":
          description: Acknowledgement of network list
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Network"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /networks/{id}/add:
    post:
      operationId: addToNetwork
      tags:
        - NetworkAPIs
      description: This API is add partner to network.
      requestBody:
        description: This will be called from add partner to network
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
              properties:
                partner:
                  type: string
                  format: Alphanumeric
                  maxLength: 35
                  description: Id of network
      responses:
        "200":
          description: Acknowledgement of network creation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Network"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /networks/{id}/delete:
    post:
      operationId: deleteToNetwork
      tags:
        - NetworkAPIs
      description: This API is delete/remove partner to network.
      requestBody:
        description: This will be called from delete/remove partner to network
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
              properties:
                partner:
                  type: string
                  format: Alphanumeric
                  maxLength: 35
                  description: Id of network
      responses:
        "200":
          description: Acknowledgement of network creation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Network"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /participantRegistry/{type}:
    post:
      tags:
        - Paticipant Registry
      summary: register participant entity
      operationId: registerEntity
      description: API to register entity in the registry
      parameters:
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/EntityType"
      requestBody:
        description: Request to register entity like LA, lender, data-provider
        content:
          application/json:
            schema:
              type: object
              anyOf:
                - $ref: "#/components/schemas/RegisterEntityRequest"
                - $ref: "#/components/schemas/DataProviderEntity"
      responses:
        "200":
          description: Acknowledgement of Request Received
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityAddDeleteResponse"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /participantRegistry/{type}/{id}:
    patch:
      tags:
        - Paticipant Registry
      summary: update entity entry
      operationId: updateEntity
      description: API to update entry in the registry
      parameters:
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/EntityType"
        - $ref: "#/components/parameters/Id"
      requestBody:
        description: Request to update entity properties
        content:
          application/json:
            schema:
              type: object
              anyOf:
                - $ref: "#/components/schemas/UpdateEntityRequest"
                - $ref: "#/components/schemas/UpdateDataProviderEntityRequest"
      responses:
        "200":
          description: Acknowledgement of Request Received
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityAddDeleteResponse"
        "400":
          description: Invalid request
        "404":
          description: Not found
    get:
      tags:
        - Paticipant Registry
      summary: get entity by id
      operationId: getEntity
      description: API to get paricipant entity by id
      parameters:
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/EntityType"
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Acknowledgement of Request Received
          content:
            application/json:
              schema:
                type: object
                anyOf:
                  - $ref: "#/components/schemas/RegisteredEntity"
                  - $ref: "#/components/schemas/DataProviderEntity"
        "400":
          description: Invalid request
        "404":
          description: Not found
    delete:
      tags:
        - Paticipant Registry
      summary: delete entity by id
      operationId: deleteEntity
      parameters:
        - $ref: "#/components/parameters/EntityType"
        - $ref: "#/components/parameters/Id"
      responses:
        "200":
          description: Acknowledgement of Request Received
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityAddDeleteResponse"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /participantRegistry/{type}/lookup:
    post:
      tags:
        - Paticipant Registry
      summary: lookup query for entities
      operationId: entityLookup
      parameters:
        - $ref: "#/components/parameters/Signature"
        - $ref: "#/components/parameters/EntityType"
      requestBody:
        description: Query LA, lender, data-provider using properties
        content:
          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/EntityLookupRequest"
      responses:
        "200":
          description: Acknowledgement of Request Received
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EntityLookupResponse"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /products:
    post:
      operationId: createProduct
      tags:
        - Product Registry
      summary: Product create API.
      requestBody:
        description: This will be called from console to create product
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
              properties:
                name:
                  type: string
                  format: Alphanumeric
                  maxLength: 35
                  description: Name of product
                description:
                  type: string
                  format: Alphanumeric
                  maxLength: 35
                  description: Description of product.
      responses:
        "200":
          description: Acknowledgement of product creation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    $ref: "#/components/schemas/Product"
        "400":
          description: Invalid request
        "404":
          description: Not found
    get:
      operationId: listProduct
      tags:
        - Product Registry
      summary: List product API
      responses:
        "200":
          description: Acknowledgement of product creation
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /products/{id}:
    get:
      operationId: indexProduct
      tags:
        - Product Registry
      summary: Product find by ID API.
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns a product
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Product"
        "400":
          description: Invalid request
        "404":
          description: Not found
    delete:
      operationId: deleteProduct
      tags:
        - Product Registry
      summary: Delete product by ID API.
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns a product
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Product"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /products/{id}/disable:
    post:
      operationId: disableProduct
      tags:
        - Product Registry
      summary: Disable product API.
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Acknowledgement of product delete
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Product"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /products/{id}/metadata:
    get:
      operationId: getProductMetadata
      tags:
        - Product Registry
      summary: Get Product Metadata.
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns a product
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Product"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /products/{id}/allowed_participants:
    get:
      operationId: getAllowedParticipants
      tags:
        - Product Registry
      summary: Product find by ID API.
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns a product participants
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/ProductParticipants"
        "400":
          description: Invalid request
        "404":
          description: Not found
    post:
      operationId: updateAllowedParticipants
      tags:
        - ProductParticipantAPIs
      summary: Product find by ID API.
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns a product participants
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/ProductParticipants"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /products/{id}/participants:
    get:
      operationId: getParticipantsList
      tags:
        - Product Registry
      summary: Get Product Participants List.
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns a product participants
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/ProductParticipants"
        "400":
          description: Invalid request
        "404":
          description: Not found
    post:
      operationId: participateInProduct
      tags:
        - ProductParticipantAPIs
      summary: Add Product Participants List.
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns a product participants
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/ProductParticipants"
        "400":
          description: Invalid request
        "404":
          description: Not found
    delete:
      operationId: unparticipateInProduct
      summary: Unparticipate in product
      tags:
        - ProductParticipantAPIs
      responses:
        "200":
          description: Returns a product participants
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/ProductParticipants"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /products/{id}/participants/{type}/fields:
    get:
      operationId: getFieldsByParticipantType
      tags:
        - Product Registry
      summary: Get Fields By Participant Type.
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: string
        - name: type
          in: path
          description: Type of participant
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns a product
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/ProductField"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /products/{id}/participants/{participant_product_id}/disable:
    post:
      operationId: disableProductParticipant
      tags:
        - Product Registry
      summary: Disable Product Participant API.
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: string
        - name: participant_product_id
          in: path
          description: Participant Product ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Acknowledgement of product delete
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Product"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /products/{id}/participants/invite:
    post:
      operationId: inviteParticipants
      tags:
        - Product Registry
      summary: Invite participants to product.
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - participants
              properties:
                participants:
                  type: array
                  description: List of participants to invite
                  items:
                    $ref: "#/components/schemas/ProductParticipants"
      responses:
        "200":
          description: Returns an invite for the product
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Response"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /products/{id}/approve:
    post:
      operationId: participantManagementApIs
      tags:
        - Product Registry
      summary: Approve a product.
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns approved or rejected
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Response"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /products/{id}/admin/{user_id}/make:
    post:
      operationId: makeUserAdmin
      summary: Make a user as an Admin
      tags:
        - Product Registry
      description: This API is to make a user as an Admin for a product
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns success or failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Response"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /products/{id}/admin/{user_id}:
    delete:
      operationId: removeUserAsAdmin
      summary: Remove user as Admin
      tags:
        - Product Registry
      description: This API is to remove Admin privileages for a user
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: string
        - name: user_id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns success or failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Response"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /products/{user_id}/participants/endpoint:
    get:
      operationId: getParticipantEndpoint
      tags:
        - Product Registry
      summary: Get Product Participant
      parameters:
        - name: user_id
          in: path
          description: Participant ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns participant information
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/ProductParticipants"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /products/{id}/update:
    patch:
      operationId: updateProduct
      tags:
        - Product Registry
      summary: Update Product
      requestBody:
        description: This will be called from console to update product
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                - id
              properties:
                name:
                  type: string
                  format: Alphanumeric
                  maxLength: 35
                  description: Name of product
                description:
                  type: string
                  format: Alphanumeric
                  maxLength: 35
                  description: Description of product.
                id:
                  type: string
                  format: Integer
                  maxLength: 25
                  description: Id of the existing product.
      responses:
        "200":
          description: Returns updated product
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Product"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /products/{id}/notify:
    post:
      operationId: notifyParticipants
      tags:
        - Product Registry
      summary: Notify Product Participants.
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - participants
              properties:
                participants:
                  type: array
                  description: List of participants to notify
                  items:
                    $ref: "#/components/schemas/ProductParticipants"
      responses:
        "200":
          description: Returns success or failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Response"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /products/{id}/notice_notify:
    post:
      operationId: notifyParticipants
      tags:
        - Product Registry
      summary: Notify Product Participants.
      parameters:
        - name: id
          in: path
          description: Product ID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - participants
              properties:
                participants:
                  type: array
                  description: List of participants to notify
                  items:
                    $ref: "#/components/schemas/ProductParticipants"
      responses:
        "200":
          description: Returns success or failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Response"
        "400":
          description: Invalid request
        "404":
          description: Not found
  /v4.0.0alpha/disbursementPartner/getDisbursementOptionsRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Get Disbursement Options Request
      summary: Get Disbursement Options Request
      description: This endpoint is initiated by the LA on the Disbursement partner to get all the products available for the borrower.
      operationId: GetDisbursementOptionsRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
              properties:
                metaData:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                productId:
                  type: string
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/disbursementPartner/getDisbursementOptionsResponse:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Get Disbursement Options Response
      summary: Get Disbursement Options Response
      description: This endpoint is initiated by the Disbursement partner on the LA as a response to Get Disbursement Options returning all Disbursement Products available.
      operationId: GetDisbursementOptionsResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
              properties:
                metaData:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                productId:
                  type: string
                disbursementProducts:
                  type: array
                  items:
                    $ref: "#/components/schemas/DisbursementProduct"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/disbursementPartner/getDisbursementProductDetailsRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Get Disbursement Product Details Request
      summary: Get Disbursement Details Request
      description: This endpoint can be initiated by LA / Lender on the disbursement partner to get the details of a specific product
      operationId: GetDisbursementProductDetailsRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
              properties:
                metaData:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                disbursementProductId:
                  type: string
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/disbursementPartner/getDisbursementProductDetailsResponse:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Get Disbursement Product Detail Response
      summary: Get Disbursement Product Detail Response
      description: This endpoint is initiated by the DisbursementPartner in response to GetDisbursementProductDetailsRequest providing the details of a specific product.
      operationId: GetDisbursementProductDetailResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
              properties:
                metaData:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                disbursementProductId:
                  type: string
                disbursementProducts:
                  $ref: "#/components/schemas/DisbursementProduct"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/collectionsPartner/getCollectionsStatusRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Get Collections Status
      summary: Get Collections Status Request
      description: This API is used by Lender on the Collections Partner to check the status of a previously initiated repayment transaction. In the case where collection is handled by Collection Management System (CMS), once the Collection Agent receives payment confirmation (including transaction reference number) from the Collection Management System, Collections Partner will send a request to the lender to check if a payment has been credited against the transaction Reference Number.
      operationId: triggerRepaymentStatusRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - payment
                - loanId
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                payment:
                  $ref: "#/components/schemas/Payment"
                loanId:
                  type: string
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/collectionsPartner/getCollectionsStatusResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Get Collections Status Response
      summary: Trigger Repayment Status Response
      description: This API is used by Collections Partner on the Lender to check the status of a previously initiated repayment transaction. In the case where collection is handled by Collection Management System (CMS), once the Collection Partner receives payment confirmation (including transaction reference number) from the Collection Management System, Collections Partner will send a request to the lender to check if a payment has been credited against the transaction Reference Number.
      operationId: triggerRepaymentStatusRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - payment
                - response
                - loanId
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                payment:
                  $ref: "#/components/schemas/Payment"
                response:
                  $ref: "#/components/schemas/Response"
                loanId:
                  type: string
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/collectionsPartner/getPaymentMethodsRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Get Payment Methods Request
      summary: Get Payment Methods Request
      description: This endpoint is initiated by the LA on the Collections Partner before the Set Repayment Plan request to present the borrower with the available repayment methods.
      operationId: Get
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
              properties:
                metaData:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                productId:
                  type: string
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/collectionsPartner/getPaymentMethodsResponse:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Get Payment Methods Response
      summary: Get Payment Methods Response
      description: This endpoint is initiated by the Collections partner on the LA as a response to Get Payment Methods returning all Collection Options available.
      operationId: GetPaymentMethodsResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
              properties:
                metaData:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                productId:
                  type: string
                paymentMethods:
                  type: array
                  items:
                    $ref: "#/components/schemas/PaymentMethod"
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/collectionsPartner/triggerCollectionsRequest:
    post:
      servers:
        - url: https://ocenapis.lender.com
      tags:
        - Trigger Collections Request
      summary: Trigger Collections Request
      description: This API is invoked by the Lender to inform the Collections partner to trigger a repayment. This API will only be called when payment is routed to lender via collection agent.
      operationId: triggerCollectionsRequest
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - payment
                - loanId
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                payment:
                  $ref: "#/components/schemas/Payment"
                paymentMethod:
                  $ref: "#/components/schemas/PaymentMethod"
                loanId:
                  type: string
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
  /v4.0.0alpha/collectionsPartner/triggerCollectionsResponse:
    post:
      servers:
        - url: https://ocenapis.borrowagent.com
      tags:
        - Trigger Collections Response
      summary: Trigger Collections Response
      description: This API is invoked by the collections partner to the Lender. The collections partner generates a collection id which will be used by the Lender to query the status of collections.
      operationId: triggerCollectionsResponse
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - metadata
                - requestId
                - payment
                - response
                - loanId
              properties:
                metadata:
                  $ref: "#/components/schemas/MetaData"
                requestId:
                  type: string
                response:
                  $ref: "#/components/schemas/Response"
                payment:
                  $ref: "#/components/schemas/Payment"
                loanId:
                  type: string
      responses:
        "200":
          description: Acknowledgement of Request Received
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ack"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    oAuth2Client:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://ocen.com/auth/oauth2/token/
          scopes: {}
  schemas:
    MetaData:
      title: metadata
      type: object
      description: Metadata specific to each API request.
      required:
        - version
        - orgId
        - timestamp
        - traceId
      properties:
        version:
          type: string
        orgId:
          type: string
        timestamp:
          type: string
        traceId:
          type: string
    Document:
      type: object
      required:
        - source
        - sourceIdentifier
        - format
        - reference
        - type
        - isDataInline
        - data
      properties:
        source:
          type: string
          default: ""
          enum:
            - GSTN
            - AA
            - FIP
            - FSR
            - FIU
            - USER
        sourceIdentifier:
          type: string
          examples:
            - GSTN
        format:
          type: string
          enum:
            - JSON
            - DOC
            - IMAGE
            - CSV
            - XML
        reference:
          type: string
          examples:
            - docref12
        type:
          type: string
          enum:
            - GST_PROFILE
            - GSTN_B2B_INVOICE
            - PAN
            - AADHAAR
            - DRIVING_LICENSE
            - PASSPORT
            - OTHER
        isDataInline:
          type: boolean
        data:
          type: string
          examples:
            - eyJzdGpDZCI6IkFQMDAzIiwibGdubSI6Ik1TIENPUlBPUkFUSU9OIiwic3RqIjoiQkNQIEtPRElLT05EQSIsImR0eSI6IlJlZ3VsYXIiLCJjeGR0IjoiIiwiZ3N0aW4iOiIwNUFCTlRZMzI5MFA4WkEiLCJuYmEiOlsiQm9uZGVkIFdhcmVob3VzZSIsIkVPVSAvIFNUUCAvIEVIVFAiLCJGYWN0b3J5IC8gTWFudWZhY3R1cmluZyIsIklucHV0IFNlcnZpY2UgRGlzdHJpYnV0b3IgKElTRCkiLCJMZWFzaW5nIEJ1c2luZXNzIl0sImxzdHVwZHQiOiIwNS8wMS8yMDE3IiwicmdkdCI6IjA1LzA1LzIwMTciLCJjdGIiOiJGb3JlaWduIExMUCIsInN0cyI6IlByb3Zpc2lvbmFsIiwiY3RqQ2QiOiJBUDAwNCIsImN0aiI6IkJDUCBUSFVNTUFLVU5UQSIsInRyYWRlTmFtIjoiQUxUT04gUExBU1RJQyBQUklWQVRFIExURCIsImFkYWRyIjpbeyJhZGRyIjp7ImJubSI6IkVMUEhJTlNUT05FIEJVSUxESU5HIiwic3QiOiIxMCwgVkVFUiBOQVJJTUFOIFJPQUQiLCJsb2MiOiJGT1JUIiwiYm5vIjoiMTAiLCJzdGNkIjoiUmFqYXN0aGFuIiwiZmxubyI6IjFTVCBGTE9PUiIsImx0IjoiNzQuMjE3OSIsImxnIjoiMjcuMDIzOCIsInBuY2QiOiI0MDAwMDEifSwibnRyIjpbIldob2xlc2FsZSBCdXNpbmVzcyJdfV0sInByYWRyIjp7ImFkZHIiOnsiYm5tIjoiS0FUR0FSQSBIT1VTRSIsInN0IjoiMTUsIEwgSkFHTU9IQU5EQVMgTUFSRyIsImxvYyI6Ik1BTEFCQVIgSElMTCIsImJubyI6IjUiLCJzdGNkIjoiTWFoYXJhc2h0cmEiLCJmbG5vIjoiNFRIIEZMT09SIiwibHQiOiI3NC4yMTc5IiwibGciOiIyNy4wMjM4IiwicG5jZCI6IjQwMDAwNiJ9LCJudHIiOlsiV2hvbGVzYWxlIEJ1c2luZXNzIl19fQ
    ExtensibleData:
      type: object
      description: This API schema is for additional keys & values according to specific need. User can add JSON objects as per the requirements.
    AdditionalIdentifier:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
        value:
          type: string
          examples:
            - AADHAAR
        url:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    Address:
      title: Root
      type: object
      required:
        - hba
        - srl
        - pinCode
        - state
        - country
      properties:
        hba:
          type: string
          examples:
            - <House/Building/Apartment>
        srl:
          type: string
          examples:
            - <Street/Road/Lane>
        landmark:
          type: string
        als:
          type: string
          examples:
            - <Area/Locality/Sector>
        vtc:
          type: string
          examples:
            - <Village/Town/City>
        pinCode:
          type: string
          examples:
            - ""
        po:
          type: string
          examples:
            - ""
        district:
          type: string
          examples:
            - ""
        state:
          type: string
          examples:
            - ""
        country:
          type: string
          examples:
            - ""
        url:
          type: string
          examples:
            - <digital address>
        latitude:
          type: string
          examples:
            - ""
        longitude:
          type: string
          examples:
            - ""
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    ContactDetails:
      type: object
      required:
        - type
        - phone
      properties:
        type:
          type: string
          enum:
            - PRIMARY
            - OTHER
        desctiption:
          type: string
        phone:
          type: string
          examples:
            - "7777777777"
        email:
          type: string
          examples:
            - johndoe@defenterprises
        address:
          $ref: "#/components/schemas/Address"
        url:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    Borrower:
      type: object
      required:
        - primaryId
        - primaryIdType
        - category
        - contactDetails
      properties:
        primaryId:
          type: string
          examples:
            - CPAA1234A
        primaryIdType:
          type: string
          enum:
            - PAN
            - MOBILE
            - AADHAAR
        additionalIdentifiers:
          type: array
          items:
            $ref: "#/components/schemas/AdditionalIdentifier"
        name:
          type: string
          examples:
            - John doe
        category:
          type: string
          enum:
            - ORGANIZATION
            - INDIVIDUAL
        contactDetails:
          type: array
          items:
            $ref: "#/components/schemas/ContactDetails"
        documents:
          type: array
          items:
            $ref: "#/components/schemas/Document"
        url:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
        aaIdentifier:
          type: string
          example: user@aa
          description: For AA based flows, account aggregator identifier will be provided by the borrower
    Valuation:
      type: object
      properties:
        value:
          type: string
          examples:
            - "20000"
        currency:
          type: string
          examples:
            - INR
        date:
          type: string
        source:
          type: string
          enum:
            - GSTN
            - OTHERS
        description:
          type: string
        url:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    Party:
      type: object
      required:
        - primaryId
        - primaryIdType
        - name
        - category
        - relationshipWithCollateral
        - contactDetails
        - documents
      properties:
        primaryId:
          type: string
          examples:
            - <PAN NO.>
        primaryIdType:
          type: string
          enum:
            - PAN
            - MOBILE
            - AADHAAR
            - FIU
        description:
          type: string
        additionalIdentifiers:
          type: array
          items:
            $ref: "#/components/schemas/AdditionalIdentifier"
        name:
          type: string
        category:
          type: string
          enum:
            - INDIVIDUAL
            - ORGANIZATION
        relationshipWithCollateral:
          type: string
        contactDetails:
          type: array
          items:
            $ref: "#/components/schemas/ContactDetails"
        documents:
          type: array
          items:
            $ref: "#/components/schemas/Document"
        url:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    Collateral:
      type: object
      required:
        - collateralPrimaryId
        - collateralPrimaryIdType
        - additionalIdentifiers
        - parties
        - type
        - documents
      properties:
        collateralPrimaryId:
          type: string
          examples:
            - INVOICE_<GSTIN>_<INVOICENUM>
        collateralPrimaryIdType:
          type: string
          enum:
            - GST_INVOICE
            - VIN
            - <OTHER VALID REGISTRY>
        additionalIdentifiers:
          type: array
          items:
            $ref: "#/components/schemas/AdditionalIdentifier"
        valuation:
          $ref: "#/components/schemas/Valuation"
        parties:
          type: array
          items:
            $ref: "#/components/schemas/Party"
        type:
          type: string
          enum:
            - GST_INVOICE
            - VEHICLE
            - HOME
        description:
          type: string
        documents:
          type: array
          items:
            $ref: "#/components/schemas/Document"
        url:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    Guarantor:
      type: object
      required:
        - primaryId
        - primaryIdType
        - category
        - contactDetails
        - documents
      properties:
        primaryId:
          type: string
          examples:
            - CPAA1234A
        primaryIdType:
          type: string
          enum:
            - PAN
            - MOBILE
            - AADHAAR
        description:
          type: string
          examples:
            - ""
        additionalIdentifiers:
          type: array
          items:
            $ref: "#/components/schemas/AdditionalIdentifier"
        name:
          type: string
          examples:
            - John doe
        relationshipWithBorrower:
          type: string
          examples:
            - Father
        category:
          type: string
          enum:
            - ORGANIZATION
            - INDIVIDUAL
        contactDetails:
          type: array
          items:
            $ref: "#/components/schemas/ContactDetails"
        documents:
          type: array
          items:
            $ref: "#/components/schemas/Document"
        url:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    Applicant:
      type: object
      required:
        - primaryId
        - primaryIdType
      properties:
        primaryId:
          type: string
          examples:
            - <PAN NO.>
        primaryIdType:
          type: string
          enum:
            - PAN
            - MOBILE
            - AADHAAR
        additionalIdentifiers:
          type: array
          items:
            $ref: "#/components/schemas/AdditionalIdentifier"
        name:
          type: string
        category:
          type: string
          enum:
            - ORGANIZATION
            - INDIVIDUAL
        relationshipWithBorrower:
          type: string
        contactDetails:
          type: array
          items:
            $ref: "#/components/schemas/ContactDetails"
        documents:
          type: array
          items:
            $ref: "#/components/schemas/Document"
        url:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    LoanTenure:
      type: object
      required:
        - duration
        - unit
      properties:
        duration:
          type: string
        unit:
          type: string
          enum:
            - MONTH
            - DAY
            - YEAR
    LoanAgreement:
      type: object
      required:
        - type
        - data
      properties:
        type:
          type: string
          enum:
            - TEXT
            - URL
        data:
          type: string
    ChargeDetails:
      type: object
      required:
        - chargeType
        - data
      properties:
        chargeType:
          type: string
          enum:
            - FIXED_AMOUNT
            - RATE_BASED
        data:
          type: object
          properties:
            rate:
              type: string
              examples:
                - "6"
            amount:
              type: number
            applicableParameter:
              type: string
              enum:
                - TOTAL_LOAN_AMOUNT
                - OUTSTANDING_PAYABLE_AMOUNT
                - EMI
                - REPAYMENT_PRINCIPAL
            description:
              type: string
            url:
              type: string
        url:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    Charges:
      type: object
      properties:
        prepayment:
          $ref: "#/components/schemas/ChargeDetails"
        bounce:
          $ref: "#/components/schemas/ChargeDetails"
        latePayment:
          $ref: "#/components/schemas/ChargeDetails"
        processing:
          $ref: "#/components/schemas/ChargeDetails"
    LoanTerms:
      type: object
      required:
        - requestedAmount
        - currency
      properties:
        requestedAmount:
          type: string
          examples:
            - "50000.00"
        currency:
          type: string
          examples:
            - INR
        sanctionedAmount:
          type: string
          examples:
            - "5000.00"
        interestType:
          type: string
          enum:
            - FIXED
            - FLOATING
        interestRate:
          type: string
          examples:
            - "6.50"
        totalAmount:
          type: string
        interestAmount:
          type: string
        description:
          type: string
        tenure:
          $ref: "#/components/schemas/LoanTenure"
        legalAgreement:
          $ref: "#/components/schemas/LoanAgreement"
        documents:
          type: array
          items:
            $ref: "#/components/schemas/Document"
        charges:
          $ref: "#/components/schemas/Charges"
        url:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    LoanApplicationRequest:
      type: object
      required:
        - createdDate
        - loanApplicationId
        - loanType
        - borrower
        - collaterals
        - guarantors
        - applicants
        - terms
      properties:
        createdDate:
          type: string
        loanApplicationId:
          type: string
        productId:
          type: string
        pledgedDocuments:
          type: array
          items:
            $ref: "#/components/schemas/Document"
        borrower:
          type: array
          $ref: "#/components/schemas/Borrower"
        collaterals:
          type: array
          $ref: "#/components/schemas/Collateral"
        guarantors:
          type: array
          $ref: "#/components/schemas/Guarantor"
        applicants:
          type: array
          $ref: "#/components/schemas/Applicant"
        terms:
          $ref: "#/components/schemas/LoanTerms"
        url:
          type: string
        disbursementProductId:
          type: string
        description:
          type: string
        extensibleData: ./ExtensibleData.yaml
    Ack:
      type: object
      required:
        - error
        - traceId
        - timestamp
      properties:
        error:
          type: string
          examples:
            - "0"
        traceId:
          type: string
          examples:
            - e8cc6822-d4bb-4eb1-9e1b-4996fbff8acb
        timestamp:
          type: string
          examples:
            - "2018-12-06T11:39:57.153Z"
    Response:
      type: object
      description: Status of response. Whether success or has encountered error
      required:
        - error
      properties:
        error:
          type: string
    Lender:
      type: object
      required:
        - primaryId
        - primaryIdType
        - name
        - category
        - contactDetails
        - documents
      properties:
        primaryId:
          examples:
            - AWWPA7645M
        primaryIdType:
          type: string
          enum:
            - PAN
            - MOBILE
            - AADHAAR
            - FIU
        additionalIdentifiers:
          type: array
          items:
            $ref: "#/components/schemas/AdditionalIdentifier"
        name:
          type: string
          examples:
            - ABC Bank
        category:
          type: string
          enum:
            - ORGANIZATION
            - INDIVIDUAL
        contactDetails:
          type: array
          items:
            $ref: "#/components/schemas/ContactDetails"
        documents:
          type: array
          items:
            $ref: "#/components/schemas/Document"
        url:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    KYCDetails:
      type: object
      properties:
        kycRefNo:
          type: string
        type:
          type: string
          enum:
            - CKYC
            - UDYAM
            - OFFLINE_AADHAAR
        url:
          type: string
        status:
          type: string
          enum:
            - SUCCESS
            - REJECTED
            - PENDING
            - ACTION_REQUIRED
        description:
          type: string
        udyamRegistrationNumber:
          type: string
        businessType:
          type: string
          enum:
            - MICRO
            - SMALL
            - MEDIUM
        businessCategory:
          type: string
          enum:
            - SERVICE
            - MANUFACTURING
        businessName:
          type: string
        businessAddress: {}
        businessEmail:
          type: string
        businessPhoneNumber:
          type: string
        incorporationDate:
          type: string
        businessCommencementDate:
          type: string
        udyamRegistrationDate:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
        fullName:
          type: string
        dob:
          type: string
        address:
          $ref: "#/components/schemas/Address"
    KYC:
      type: object
      properties:
        verificationStatus:
          type: string
          enum:
            - SUCCESS
            - REJECTED
            - PENDING
            - ACTION_REQUIRED
        kycRefNo:
          type: string
        url:
          type: string
        initiateCKYC:
          type: boolean
        individualKYC:
          $ref: "#/components/schemas/KYCDetails"
        entityKYC:
          $ref: "#/components/schemas/KYCDetails"
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    RejectionDetail:
      type: object
      required:
        - reason
        - description
      properties:
        reason:
          type: string
          enum:
            - LOW_CREDIT_SCORE
            - FRAUD
            - DOC_IRREGULARITIES
            - OTHERS
        description:
          type: string
          examples:
            - Credit score below 600
        url:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    Reference:
      type: object
      required:
        - object
        - value
      properties:
        object:
          type: string
          examples:
            - documents
        value:
          type: string
          examples:
            - INVOICE_GSTN_INV2011
    ActionRequired:
      type: object
      required:
        - actionType
        - description
        - reference
      properties:
        actionType:
          type: string
          enum:
            - ADD_DOCUMENT
            - RESUBMIT_DOCUMENT
            - OTHER
        description:
          type: string
          examples:
            - DL number not visible
        reference:
          $ref: "#/components/schemas/Reference"
        url:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    LoanApplication:
      type: object
      required:
        - loanApplicationId
      properties:
        createdDate:
          type: string
          description: The time when the loan application was created
        loanApplicationId:
          type: string
          description: UUID for the loan application. Generated by LA
        productId:
          type: string
          description: Specific loan product within the product type
          enum:
            - PURCHASE_ORDER_FINANCING
            - INVOICE_FINANCING
        loanApplicationStatus:
          type: string
          description: Current status of the loan application.
          enum:
            - PROCESSING
            - OFFERED
            - OFFER_ACCEPTED
            - GRANTED
            - REJECTED
            - ACTION_REQUIRED
        borrower:
          $ref: "#/components/schemas/Borrower"
          description: Details of the Borrower
        collaterals:
          type: array
          description: Details of the instruments against which the user wishes to take a loan. If no data is there to be sent, an empty array block can be passed.
          items:
            $ref: "#/components/schemas/Collateral"
        guarantors:
          type: array
          description: List of guarantors that the borrowers have for the loan. If no data is there to be sent, an empty array block can be passed.
          items:
            $ref: "#/components/schemas/Guarantor"
        applicants:
          type: array
          description: List of applicants for the loan.  If no data is there to be sent, an empty array block can be passed
          items:
            $ref: "#/components/schemas/Applicant"
        lender:
          $ref: "#/components/schemas/Lender"
          description: Lender details
        kyc:
          $ref: "#/components/schemas/KYC"
          description: KYC details
        description:
          type: string
          maxLength: 1000
          description: A short description of the loan application
        url:
          type: string
          maxLength: 1000
          description: For any additional data  that needs to be passed as a link
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
          description: For any additional data that needs to be added
        rejectionDetails:
          type: array
          items:
            $ref: "#/components/schemas/RejectionDetail"
          description: To be filled if the status of the loan is REJECTED. This object will have the details of why the loan application was rejected
        actionRequired:
          type: array
          items:
            $ref: "#/components/schemas/ActionRequired"
          description: To be filled if the status of the loan is ACTION_REQUIRED. This object captures the details of any action that the lender wants the borrower to do
    LAInfo:
      type: object
      properties:
        LAId:
          type: string
          examples:
            - <AA can identify the LA based on this>
        version:
          type: string
          examples:
            - <version of LA>
        appName:
          type: string
          examples:
            - <Package name of the app>
        url:
          type: string
          examples:
            - https://abc-bank.com
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    Consent:
      type: object
      properties:
        consentFetchType:
          type: string
          default: ""
          enum:
            - ONETIME
            - PERIODIC
        vua:
          type: string
          default: ""
          examples:
            - user@aa.in
        description:
          type: string
        isAggregationEnabled:
          type: boolean
          examples:
            - true
        consentAggregationId:
          type: string
          default: ""
          examples:
            - e8cc6822bd4bbb4eb1b9e1b4996fbff8acd
        LAInfo:
          $ref: "#/components/schemas/LAInfo"
        consentHandle:
          type: string
        consentStatus:
          type: string
          enum:
            - READY
            - PENDING
            - FAILED
        url:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    ConsentHandleRequest:
      type: object
      required:
        - metadata
        - loanApplicationIds
        - requestId
        - consent
      properties:
        metadata:
          $ref: "#/components/schemas/MetaData"
        loanApplicationIds:
          type: array
          items:
            type: string
            examples:
              - f8cc6822bd4bbb4eb1b9e1b4996fbff8acb
        requestId:
          type: string
          examples:
            - g8cc6822bd4bbb4eb1b9e1b4996fbff8acb
        consent:
          $ref: "#/components/schemas/Consent"
    ConsentHandleResponse:
      type: object
      required:
        - metadata
        - response
        - requestId
        - consent
      properties:
        metadata:
          $ref: "#/components/schemas/MetaData"
        response:
          $ref: "#/components/schemas/Response"
        requestId:
          type: string
          examples:
            - i8cc6822bd4bbb4eb1b9e1b4996fbff8acb
        consent:
          $ref: "#/components/schemas/Consent"
    ConsentHandle:
      type: object
      required:
        - metadata
        - response
        - requestId
        - consentHandle
      properties:
        metadata:
          $ref: "#/components/schemas/MetaData"
        response:
          $ref: "#/components/schemas/Response"
        requestId:
          type: string
          examples:
            - i8cc6822bd4bbb4eb1b9e1b4996fbff8acb
        loanApplicationIds:
          type: array
          items:
            type: string
        consentHandle:
          type: string
    ConsentNotificationRequest:
      type: object
      description: Request object used by LA to share consent process completion update to Gateway
      required:
        - metadata
        - requestId
        - consents
      properties:
        metadata:
          $ref: "#/components/schemas/MetaData"
        requestId:
          type: string
          examples:
            - m8cc6822bd4bbb4eb1b9e1b4996fbff8acb
        consents:
          type: array
          items:
            type: object
            properties:
              lenderId:
                type: string
                description: Lender identifier to whom the consentHandle belongs.
              loanApplicationId:
                type: string
                format: uuid
              consentAggregationId:
                type: string
                default: ""
                examples:
                  - e8cc6822bd4bbb4eb1b9e1b4996fbff8acd
              consentHandle:
                type: string
                description: Consent handle created during loan applications request processing
              consentComplete:
                type: boolean
                description: Status flag to indicate whether the consent was provided by customer or not.
    ConsentStatusRequest:
      type: object
      required:
        - metadata
        - requestId
        - consent
      properties:
        metadata:
          $ref: "#/components/schemas/MetaData"
        requestId:
          type: string
          examples:
            - m8cc6822bd4bbb4eb1b9e1b4996fbff8acb
        consent:
          $ref: "#/components/schemas/Consent"
    ConsentStatusResponse:
      type: object
      required:
        - metadata
        - response
        - requestId
        - consent
      properties:
        metadata:
          $ref: "#/components/schemas/MetaData"
        response:
          $ref: "#/components/schemas/Response"
        requestId:
          type: string
          examples:
            - p8cc6822bd4bbb4eb1b9e1b4996fbff8acb
        consent:
          $ref: "#/components/schemas/Consent"
    PaymentPlan:
      type: object
      required:
        - id
        - automatic
        - scheduleType
        - noOfInstallments
        - totalAmount
      properties:
        id:
          type: string
        title:
          type: string
        shortDescription:
          type: string
        description:
          type: string
        paymentUrl:
          type: string
        payNowAllowed:
          type: boolean
          examples:
            - false
        editPlanAllowed:
          type: boolean
          examples:
            - false
        changeMethodAllowed:
          type: boolean
          examples:
            - false
        automatic:
          type: boolean
          examples:
            - false
        scheduleType:
          type: string
          enum:
            - RECURRING
            - ONE_TIME
            - AS_PRESENTED
        noOfInstallment:
          type: string
        frequency:
          type: string
          enum:
            - MONTHLY
            - WEEKLY
            - QUARTERLY
            - HALF_YEARLY
            - YEARLY
        tenure:
          $ref: "#/components/schemas/LoanTenure"
        totalAmount:
          type: string
        principal:
          type: string
        interestAmount:
          type: string
        penalty:
          type: string
        startDate:
          type: string
          examples:
            - 18-12-2020
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
            - PENDING_AUTH
        url:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    AccountDetailsData:
      type: object
      properties:
        accountType:
          type: string
          enum:
            - CURRENT
            - SAVING
            - OVERDRAFT
        accountIFSC:
          type: string
          examples:
            - ICK000856
        accountNumber:
          type: string
          examples:
            - "11250789101486249090"
        vpa:
          type: string
          examples:
            - ""
        maskedAccountNumber:
          type: string
          examples:
            - XXXXXXXXX9090
    AccountDetails:
      type: object
      required:
        - accountDataType
        - data
      properties:
        id:
          type: string
          examples:
            - ""
        description:
          type: string
          examples:
            - ""
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        accountDataType:
          type: string
          enum:
            - ACCOUNT
            - VPA
        data:
          $ref: "#/components/schemas/AccountDetailsData"
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    Disbursement:
      type: object
      required:
        - plans
      properties:
        plans:
          type: array
          items:
            $ref: "#/components/schemas/PaymentPlan"
        accountDetails:
          type: array
          items:
            $ref: "#/components/schemas/AccountDetails"
    Repayment:
      type: object
      required:
        - plans
      properties:
        plans:
          type: array
          items:
            $ref: "#/components/schemas/PaymentPlan"
    Offer:
      type: object
      required:
        - id
        - validTill
        - terms
        - disbursement
        - repayment
      properties:
        id:
          type: string
          examples:
            - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
        validTill:
          type: string
        terms:
          $ref: "#/components/schemas/LoanTerms"
        disbursement:
          $ref: "#/components/schemas/Disbursement"
        repayment:
          $ref: "#/components/schemas/Repayment"
        description:
          type: string
        documents:
          type: array
          items:
            $ref: "#/components/schemas/Document"
        url:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    LoanApplicationWithOffer:
      type: object
      required:
        - loanApplicationId
      properties:
        createdDate:
          type: string
          description: The time when the loan application was created
        loanApplicationId:
          type: string
          description: UUID for the loan application. Generated by LA
        productId:
          type: string
          description: Specific loan product within the product type
          enum:
            - PURCHASE_ORDER_FINANCING
            - INVOICE_FINANCING
        offers:
          type: array
          description: Offers given by lender for a loan application
          items:
            $ref: "#/components/schemas/Offer"
        loanApplicationStatus:
          type: string
          description: Current status of the loan application.
          enum:
            - PROCESSING
            - OFFERED
            - OFFER_ACCEPTED
            - GRANTED
            - REJECTED
            - ACTION_REQUIRED
        borrower:
          $ref: "#/components/schemas/Borrower"
          description: Details of the Borrower
        collaterals:
          type: array
          description: Details of the instruments against which the user wishes to take a loan. If no data is there to be sent, an empty array block can be passed.
          items:
            $ref: "#/components/schemas/Collateral"
        guarantors:
          type: array
          description: List of guarantors that the borrowers have for the loan. If no data is there to be sent, an empty array block can be passed.
          items:
            $ref: "#/components/schemas/Guarantor"
        applicants:
          type: array
          description: List of applicants for the loan.  If no data is there to be sent, an empty array block can be passed
          items:
            $ref: "#/components/schemas/Applicant"
        lender:
          $ref: "#/components/schemas/Lender"
          description: Lender details
        kyc:
          $ref: "#/components/schemas/KYC"
          description: KYC details
        description:
          type: string
          maxLength: 1000
          description: A short description of the loan application
        url:
          type: string
          maxLength: 1000
          description: For any additional data  that needs to be passed as a link
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
          description: For any additional data that needs to be added
        rejectionDetails:
          type: array
          items:
            $ref: "#/components/schemas/RejectionDetail"
          description: To be filled if the status of the loan is REJECTED. This object will have the details of why the loan application was rejected
        actionRequired:
          type: array
          items:
            $ref: "#/components/schemas/ActionRequired"
          description: To be filled if the status of the loan is ACTION_REQUIRED. This object captures the details of any action that the lender wants the borrower to do
    PaymentMethod:
      type: object
      required:
        - id
        - status
      properties:
        id:
          type: string
        description:
          type: string
        type:
          type: string
          enum:
            - EMANDATE_UPI
            - ELIEN
            - ENACH
            - ANY
        status:
          type: string
          enum:
            - INACTIVE
            - ACTIVE
            - CANCELLED
            - PAUSE
        data:
          type: object
          description: Data for different type will be defined in later version of APIs. As of now, LA can define it as per their requirement
          $ref: "#/components/schemas/ExtensibleData"
        url:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    Payment:
      type: object
      required:
        - id
      properties:
        totalAmount:
          type: string
        date:
          type: string
        status:
          type: string
          enum:
            - SUCCESS
            - FAILURE
            - PENDING_AUTH
        installmentNumber:
          type: string
        txnRefNo:
          type: string
          examples:
            - 4618602124
        id:
          type: string
          examples:
            - e8cc6822bd4bbb4eb1b9e1b4996fbff8acb
        description:
          type: string
        principal:
          type: string
        interestAmount:
          type: string
        fee:
          type: string
        penalty:
          type: string
        useSavedPaymentOption:
          type: boolean
          examples:
            - false
        paymentMethodType:
          type: string
          default: ""
          enum:
            - UPI
            - EMANDATE_UPI
            - NETBANKING
            - ENACH
            - DEBIT_CARD
        paymentUrl:
          type: string
          examples:
            - https://abc-bank/payment
        url:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    Transaction:
      type: object
      required:
        - date
        - narration
        - txnRefNo
        - amount
        - type
        - closingBalance
      properties:
        date:
          type: string
        narration:
          type: string
        txnRefNo:
          type: string
        amount:
          type: string
        type:
          type: string
          enum:
            - DEPOSIT
            - WITHDRAWL
        closingBalance:
          type: string
        url:
          type: string
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
    AnalyticsMetrics:
      title: metrics
      type: object
      description: Metrics for OCEN analytics service
      required:
        - timestamp
      properties:
        timestamp:
          type: string
        metricsDateRange:
          type: object
          properties:
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
        data:
          type: array
          items:
            type: object
            example:
              product_id: 872ee371-41a0-4d5a-b062-ccd3da1ee1dd
              loan_applications_received: 500
              loan_applications_processed: 340
              consent_handles_created: 1000
              consent_handles_approved: 300
          description: Metrics data
    AnalyticsEvent:
      title: OCEN Heartbeat
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        eventId:
          type: string
          format: uuid
        previousEventId:
          type: string
          format: uuid
          description: Relevant previously sent heartbeat event identifier, if present, can be used to generate lineage graph
        productId:
          type: string
        loanApplicationId:
          type: string
        eventType:
          type: string
        extensibleData:
          desciption: Any extra metadata to be attached to the event
          $ref: "#/components/schemas/ExtensibleData"
    DPRegisterSchemaRequest:
      type: object
      properties:
        version:
          type: string
          description: follow semantic version, ref https://semver.org/ | <table> <thead> <tr> <td>Status</th> <td>Stage</th> <td>Rule</th> <td>ExampleVersion</th> </tr> </thead> <tbody> <tr> <td>First release</th> <td>New product</th> <td>Start with 1.0.0</th> <td>1.0.0</th> </tr> <tr> <td>-</th> </tr> <tr> <td>Backward compatible bug fixes</th> <td>Patch release</th> <td>Increment the third digit</th> <td>1.0.1</th> </tr> <tr> <td>-</th> </tr> <tr> <td>Backward compatible new features</th> <td>Minor release</th> <td>Increment the middle digit and reset last digit to zero</th> <td>1.1.0</th> </tr> <tr> <td>-</th> </tr> <tr> <td>Changes that break backward compatibility</th> <td>Major release</th> <td>Increment the first digit and reset middle and last digits to zero</th> <td>2.0.0</th> </tr> <tr> <td>-</th> </tr> </tbody> </table>
        name:
          type: string
        jsonSchema:
          type: string
          format: json
      required:
        - version
        - name
        - jsonSchema
    Timestamp:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2021-12-06T11:39:57.153Z"
    DPSchemaId:
      type: object
      properties:
        schemaId:
          type: string
          format: uuid
    DPSchemaAddDeleteResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/Timestamp"
        - $ref: "#/components/schemas/DPSchemaId"
      properties:
        message:
          type: string
          example: added successfully
    RegisteredDPSchema:
      type: object
      allOf:
        - $ref: "#/components/schemas/DPSchemaId"
        - $ref: "#/components/schemas/DPRegisterSchemaRequest"
      properties:
        createdOn:
          type: string
          format: date-time
          description: Creation timestamp of the message which will be updated at each leg
          example: "2018-12-06T11:39:57.153Z"
    ProductPartner:
      type: object
      required:
        - id
        - type
        - name
        - status
      properties:
        id:
          type: string
        type:
          type: string
        name:
          type: string
        status:
          type: string
    Network:
      type: object
      required:
        - id
        - name
        - description
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        partners:
          type: array
          items:
            $ref: "#/components/schemas/ProductPartner"
    Certificate:
      type: object
      description: Public certificate of the entity in UHI eco-system
      properties:
        kty:
          type: string
          example: RSA
          description: Key Type Parameter
        kid:
          type: string
          example: 5ebd671b-762c-49b0-99ce-65642b113d7b
          description: Public Key Use Parameter
        use:
          type: string
          example: sig
          description: The use member identifies the intended use of the key
        alg:
          type: string
          example: RS256
          description: algorithm
        "n":
          type: string
          example: gU8PDUSzaHtMOYJd9NDLJ-2dAE1lXUCgZK-N6y9vRDCurscfQlTHKZliBbhiEsMCk70_nbDie6YKXWavJKj0X4nzoa1H7jrRjKa7R80BlqtSKl95TuynUChrHvvsvcjDSXp4d4PCNZ0Hdp7j0K-QSiR4OHGb3Irm9vgv3tPdh00ijPwqFJRFSkofFiUSRp-7BXWQXvnnH0sEIMvGjCxj4hAz3J35X5KPfRaax5MCQPr1-WkOgGYvpNPaDjSjsvhtOZQMcmvy_AaoRk6FADHkIRJU14dzw9alI4dp5Yp52CRg-bPDYReQe4e3j4I8DP3i0JTkV_fJOgDKPnFpRDmDNw
          description: The modulus of key datas
        e:
          type: string
          example: AQAB
          description: The public exponent of key data
    EntityAttributes:
      type: object
      properties:
        version:
          type: string
        name:
          type: string
        baseUrl:
          type: string
          description: base url of the module in eco-system. The typical format of a baseUrl is as follows.<br> ``` <fqdn>.<extension> ``` where, <br/> <table> <thead> <tr> <td>Key</th> <td>Description</th> </tr> </thead> <tbody> <tr> <td>fqdn</th> <td>Fully qualified domain name</th> </tr> <tr> <td>extn</td> <td>Domain Extension</td> </tr> </tbody> </table> The domain name of the subscriber must be an ```https``` domain with a TLD extension and a valid SSL certificate from a trusted certificate authority
          example: https://LA.company.com
        ips:
          type: array
          items:
            type: string
          example:
            - 203.34.12.3
            - 203.34.12.4
        inboundPorts:
          type: array
          items:
            type: string
          example:
            - "80"
            - "45"
        outboundPorts:
          type: array
          items:
            type: string
          example:
            - "80"
            - "45"
        certificate:
          type: object
          $ref: "#/components/schemas/Certificate"
    RegisterEntityRequest:
      type: object
      allOf:
        - $ref: "#/components/schemas/EntityAttributes"
      required:
        - version
        - name
        - baseUrl
        - ips
        - inboundPorts
        - outboundPorts
        - cetrificate
    SupportedSchema:
      type: object
      allOf:
        - $ref: "#/components/schemas/DPSchemaId"
      properties:
        versions:
          type: array
          items:
            type: string
          example:
            - 1.0.0
            - 1.0.2
    DataProviderEntity:
      type: object
      allOf:
        - $ref: "#/components/schemas/EntityAttributes"
      properties:
        schemaIds:
          type: array
          description: Supported schemaId and versions by Data-Provider
          items:
            $ref: "#/components/schemas/SupportedSchema"
      required:
        - version
        - name
        - baseUrl
        - ips
        - inboundPorts
        - outboundPorts
        - certificate
        - schemaIds
    EntityIdentifier:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: id of the entity
    EntityType:
      type: object
      properties:
        type:
          type: string
          description: type of the entity
          enum:
            - LA
            - lender
            - data-provider
    EntityAddDeleteResponse:
      type: object
      allOf:
        - $ref: "#/components/schemas/Timestamp"
        - $ref: "#/components/schemas/EntityIdentifier"
        - $ref: "#/components/schemas/EntityType"
      properties:
        message:
          type: string
    Status:
      type: object
      properties:
        status:
          type: string
          enum:
            - ACTIVE
            - BLOCKED
            - INACTIVE
    RegisteredEntity:
      type: object
      allOf:
        - $ref: "#/components/schemas/EntityIdentifier"
        - $ref: "#/components/schemas/EntityType"
        - $ref: "#/components/schemas/Status"
        - $ref: "#/components/schemas/EntityAttributes"
      properties:
        createdOn:
          type: string
          format: timestamp
        updatedOn:
          type: string
          format: timestamp
    UpdateEntityRequest:
      type: object
      allOf:
        - $ref: "#/components/schemas/Status"
        - $ref: "#/components/schemas/EntityAttributes"
    UpdateDataProviderEntityRequest:
      type: object
      allOf:
        - $ref: "#/components/schemas/Status"
        - $ref: "#/components/schemas/DataProviderEntity"
    EntityLookupRequest:
      type: object
      allOf:
        - $ref: "#/components/schemas/EntityIdentifier"
        - $ref: "#/components/schemas/Status"
      properties:
        name:
          type: string
        version:
          type: string
        baseUrl:
          type: string
        size:
          type: integer
          example: 100
          description: maximum number of elements in a page.
        page:
          type: integer
          example: 0
          description: page number, default is 0
    EntityLookupResponse:
      type: object
      properties:
        content:
          anyOf:
            - type: array
              items:
                $ref: "#/components/schemas/RegisteredEntity"
            - type: array
              items:
                $ref: "#/components/schemas/DataProviderEntity"
        number:
          type: integer
          description: index of page
        size:
          type: integer
        totalElements:
          type: integer
          description: total number of elementes found for given query
        totalPages:
          type: integer
        last:
          type: boolean
          description: true if this is last page
        numberOfElements:
          type: integer
        first:
          type: boolean
          description: true if this is first page
    ProductField:
      type: object
      required:
        - name
        - description
      properties:
        name:
          type: string
        description:
          type: string
    ProductPartnerWithData:
      type: object
      required:
        - id
        - type
        - name
        - status
      properties:
        id:
          type: string
        type:
          type: string
        name:
          type: string
        status:
          type: string
        data:
          type: object
    Product:
      type: object
      required:
        - id
        - name
        - description
        - status
        - version
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        description:
          type: string
        creater:
          type: string
        is_enable:
          type: bool
        is_private:
          type: bool
        approved_at:
          type: integer
          format: int64
        is_aa_required:
          type: bool
        dedupe:
          type: object
          properties:
            source:
              type: object
              properties:
                url:
                  type: string
        network:
          $ref: "#/components/schemas/Network"
        lender:
          type: object
          properties:
            allowed:
              type: bool
            partners:
              type: array
              items:
                $ref: "#/components/schemas/ProductPartner"
        loan_service:
          type: object
          properties:
            allowed:
              type: bool
            partners:
              type: array
              items:
                $ref: "#/components/schemas/ProductPartner"
        benchmark_data:
          type: object
          properties:
            allowed:
              type: bool
            partners:
              type: array
              items:
                $ref: "#/components/schemas/ProductPartner"
            fields:
              type: array
              items:
                $ref: "#/components/schemas/ProductField"
        disbursement:
          type: object
          properties:
            allowed:
              type: bool
            partners:
              type: array
              items:
                $ref: "#/components/schemas/ProductPartnerWithData"
            fields:
              type: array
              items:
                $ref: "#/components/schemas/ProductField"
        collection:
          type: object
          properties:
            allowed:
              type: bool
            partners:
              type: array
              items:
                $ref: "#/components/schemas/ProductPartner"
        collateral:
          type: object
          properties:
            allowed:
              type: bool
            partners:
              type: array
              items:
                $ref: "#/components/schemas/ProductPartner"
        monitoring:
          type: object
          properties:
            allowed:
              type: bool
            partners:
              type: array
              items:
                $ref: "#/components/schemas/ProductPartner"
    ProductParticipants:
      type: object
      required:
        - name
        - description
        - endpoint
      properties:
        name:
          type: string
        description:
          type: string
        endpoint:
          type: string
          examples:
            - https://abc-bank.com
    DisbursementProduct:
      type: object
      required:
        - id
        - name
        - description
        - price
        - currency
        - accountDetails
      properties:
        id:
          type: string
          examples:
            - ""
        name:
          type: string
          examples:
            - Organic Vermicompost Fertilizer Manure 10 KG
        description:
          type: string
          examples:
            - Using various species of worms, usually red wigglers, white worms, and other earthworms, to create a mixture of decomposing vegetable or food waste.
        price:
          type: string
          examples:
            - "1000"
        currency:
          type: string
          examples:
            - INR
        accountDetails:
          $ref: "#/components/schemas/AccountDetails"
        extensibleData:
          $ref: "#/components/schemas/ExtensibleData"
  parameters:
    Signature:
      name: Signature
      in: header
      required: true
      description: Detached JWS of the body. This is the digital signature of the request body signed using the signing private key of the caller. For bodyless request JWS of path should be provided, <br>e.g. for API ```GET /v1/{type}/{id}```, JWS of ```/{type}/{id}```
      schema:
        type: string
        format: byte
    DataProviderId:
      name: id
      in: path
      description: identifier of registered data provider
      schema:
        type: string
        format: uuid
      example: 5ebd671b-762c-49b0-99ce-65642b113d7b
      required: true
    SchemaId:
      name: schemaId
      in: path
      description: identifier of schema registered
      schema:
        type: string
        format: uuid
      example: 5ebd671b-762c-49b0-99ce-65642b113d7b
      required: true
    EntityType:
      name: type
      in: path
      description: Type of the entity e.g. Loan Agent(LA), Lender, Data Provider
      schema:
        type: string
        enum:
          - LA
          - lender
          - data-provider
      example: LA
      required: true
    Id:
      name: id
      in: path
      description: identifier for entitiy registered
      schema:
        type: string
        format: uuid
      example: 5ebd671b-762c-49b0-99ce-65642b113d7b
      required: true
security:
  - bearerAuth: []
  - oAuth2Client: []
